<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dashboard">

	<select id="selectProjectInfo" resultType="camel">
		/* dashboard.selectProjectInfo */
		SELECT
			CP.PROJECT_ID,
			CP.PROJECT_NAME,
			CP.USE_CH_GRP_INFO,
			CONCAT(CU.USER_NAME, '(', CU.LOGIN_ID ,')') AS USER_INFO,
			DATE_FORMAT(CP.REG_DT, '%Y-%m-%d') AS REG_DT
		FROM	cm_console.CM_PROJECT CP
			INNER JOIN cm_console.CM_USER CU
				ON CP.REG_ID = CU.USER_ID
		WHERE	CP.PROJECT_ID	= #{projectId}
	</select>

	<select id="selectProjectList" resultType="camel">
		/* dashboard.selectProjectList */
		SELECT
			CP.PROJECT_ID,
			CP.PROJECT_NAME,
			CP.PAY_TYPE,
			CP.USE_CH_GRP_INFO,
			CASE 
				WHEN CP.PAY_TYPE = 'Y' THEN '선불'
				ELSE '후불'
			END PAY_TYPE_CD_NAME,
			CP.REG_DT,
			DATE_FORMAT(CP.REG_DT, '%Y-%m-%d') AS REG_DT_YMD
		FROM cm_console.CM_PROJECT CP
			INNER JOIN cm_console.CM_PROJECT_USER CPU
				ON CP.PROJECT_ID = CPU.PROJECT_ID
		WHERE CP.CORP_ID = #{corpId}
		AND	CP.DEL_YN != 'Y'
		AND	CP.USE_YN = 'Y'
		AND CPU.USER_ID = #{userId}
		ORDER BY CP.REG_DT DESC
		LIMIT 3
	</select>

	<select id="selectNoticeList" resultType="camel">
		/* dashboard.selectNoticeList */
		SELECT
			NOTICE_ID,
			NOTICE_TYPE,
			cm_console.fnc_get_cd_name('NOTICE_TYPE', NOTICE_TYPE, 1) AS NOTICE_TYPE_CD_NAME,
			TITLE,
			REG_DT,
			DATE_FORMAT(REG_DT, '%Y-%m-%d') AS REG_DT_YMD
		FROM cm_bo.CM_NOTICE
		WHERE VIEW_TYPE IN ('ALL', 'OUT')
		ORDER BY REG_DT DESC
		LIMIT 3
	</select>

	<select id="selectChTotCnt" resultType="camel">
        /* dashboard.selectChTotCnt */
		SELECT IFNULL(SUM(SUCC_CNT), 0) AS TOTAL_SUCC_CNT
	     , IFNULL(SUM(FAIL_CNT), 0) AS TOTAL_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'PUSH' THEN SUCC_CNT ELSE 0 END)), 0) AS PUSH_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'PUSH' THEN FAIL_CNT ELSE 0 END)), 0) AS PUSH_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'RCS' THEN SUCC_CNT ELSE 0 END)), 0) AS RCS_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'RCS' THEN FAIL_CNT ELSE 0 END)), 0) AS RCS_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'ALIMTALK' THEN SUCC_CNT ELSE 0 END)), 0) AS ALIM_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'ALIMTALK' THEN FAIL_CNT ELSE 0 END)), 0) AS ALIM_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'FRIENDTALK' THEN SUCC_CNT ELSE 0 END)), 0) AS FRIEND_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'FRIENDTALK' THEN FAIL_CNT ELSE 0 END)), 0) AS FRIEND_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'SMS' THEN SUCC_CNT ELSE 0 END)), 0) AS SMS_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'SMS' THEN FAIL_CNT ELSE 0 END)), 0) AS SMS_FAIL_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'LMS' THEN SUCC_CNT ELSE 0 END)), 0) AS LMS_SUCC_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'LMS' THEN FAIL_CNT ELSE 0 END)), 0) AS LMS_FAIL_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'MMS' THEN SUCC_CNT ELSE 0 END)), 0) AS MMS_SUCC_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'MMS' THEN FAIL_CNT ELSE 0 END)), 0) AS MMS_FAIL_CNT
    <choose>
        <when test="startMonthStr != null and startMonthStr != ''">
      FROM cm.CM_STAT_CH_MONTH
        </when>
        <otherwise>
      FROM cm.CM_STAT_CH_DAY
        </otherwise>
    </choose>
     WHERE CORP_ID = #{corpId}
	<if test="serviceType == 'UC'">
	   AND PROJECT_ID = #{projectId}
	</if>
    <choose>
        <when test="startMonthStr != null and startMonthStr != ''">
       AND YM BETWEEN STR_TO_DATE(CONCAT(#{startMonthStr}, '-01'), '%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{endMonthStr}, '-31'), '%Y-%m-%d')
        </when>
        <otherwise>
       AND YMD BETWEEN STR_TO_DATE(#{startDateStr}, '%Y-%m-%d') AND STR_TO_DATE(#{endDateStr}, '%Y-%m-%d')
        </otherwise>
    </choose>
	</select>

	<select id="selectChSuccFailCntList" resultType="camel">
		/* dashboard.selectChSuccFailCntList */
		SELECT
			AD.DATE,
			IFNULL(CSCD.SUCC_CNT, 0) AS SUCC_CNT,
			IFNULL(CSCD.FAIL_CNT, 0) AS FAIL_CNT
		FROM (
			<choose>
				<when test="startMonthStr != null and startMonthStr != ''">
			SELECT DATE_FORMAT(A.DATE, '%y-%m')	AS DATE
				</when>
				<otherwise>
			SELECT A.DATE
				</otherwise>
			</choose>
			FROM (
			    SELECT CURDATE() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			<choose>
				<when test="startMonthStr != null and startMonthStr != ''">
			WHERE A.DATE BETWEEN STR_TO_DATE(CONCAT(#{startMonthStr}, '-01'), '%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{endMonthStr}, '-31'), '%Y-%m-%d')
			GROUP BY DATE_FORMAT(A.DATE, '%y-%m')
				</when>
				<otherwise>
			WHERE A.DATE BETWEEN STR_TO_DATE(#{startDateStr}, '%Y-%m-%d') AND STR_TO_DATE(#{endDateStr}, '%Y-%m-%d')
				</otherwise>
			</choose>
		) AD
		LEFT OUTER JOIN (
			SELECT 
				CH,
            <choose>
                <when test="startMonthStr != null and startMonthStr != ''">
                YM AS YMD,
                DATE_FORMAT(YM, '%y-%m') AS YM,
                </when>
                <otherwise>
                YMD,
                DATE_FORMAT(YMD, '%y-%m') AS YM,
                </otherwise>
            </choose>
				SUM(SUCC_CNT) AS SUCC_CNT,
				SUM(FAIL_CNT) AS FAIL_CNT
            <choose>
                <when test="startMonthStr != null and startMonthStr != ''">
            FROM cm.CM_STAT_CH_MONTH
                </when>
                <otherwise>
            FROM cm.CM_STAT_CH_DAY
                </otherwise>
            </choose>
			WHERE CORP_ID = #{corpId}
			<if test="serviceType == 'UC'">
			AND PROJECT_ID = #{projectId}
			</if>
			<if test="channel != 'ALL'">
				<choose>
					<when test="channel == 'LMS'">
						AND CH = 'MMS'
						AND PRODUCT_CODE = #{channel}
					</when>
					<when test="channel == 'MMS'">
						AND CH = #{channel}
						AND PRODUCT_CODE = #{channel}
					</when>
					<otherwise>
						AND CH = #{channel}
					</otherwise>
				</choose>
			</if>
			<choose>
				<when test="startMonthStr != null and startMonthStr != ''">
			AND YM BETWEEN STR_TO_DATE(CONCAT(#{startMonthStr}, '-01'), '%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{endMonthStr}, '-31'), '%Y-%m-%d')
			GROUP BY DATE_FORMAT(YMD, '%y-%m')
				</when>
				<otherwise>
			AND YMD BETWEEN STR_TO_DATE(#{startDateStr}, '%Y-%m-%d') AND STR_TO_DATE(#{endDateStr}, '%Y-%m-%d')
			GROUP BY YMD
				</otherwise>
			</choose>
		) CSCD
		<choose>
			<when test="startMonthStr != null and startMonthStr != ''">
		ON AD.DATE = CSCD.YM
			</when>
			<otherwise>
		ON AD.DATE = CSCD.YMD
			</otherwise>
		</choose>
		ORDER BY AD.DATE
	</select>

	<select id="selectChFailCodeList" resultType="camel">
        /* dashboard.selectChFailCodeList */
        SELECT RESULT_CODE
             , IFNULL(CCG.GW_MESSAGE, '미등록코드') AS RESULT_MESSAGE
             , SUM(CNT) AS CNT
          FROM cm.CM_CODE_GW       CCG
    <choose>
        <when test="startMonthStr != null and startMonthStr != ''">
             , cm.CM_STAT_RSLT_MONTH CSRD
        </when>
        <otherwise>
             , cm.CM_STAT_RSLT_DAY CSRD
        </otherwise>
    </choose>
    <choose>
        <when test="startMonthStr != null and startMonthStr != ''">
         WHERE CSRD.YM BETWEEN CONCAT(#{startMonthStr}, '-01') AND CONCAT(#{endMonthStr}, '-31')
        </when>
        <otherwise>
         WHERE CSRD.YMD BETWEEN #{startDateStr} AND #{endDateStr}
        </otherwise>
    </choose>
           AND CSRD.RESULT_CODE = CCG.GW_CODE
           AND CSRD.RESULT_CODE > '10000'
           AND CORP_ID = #{corpId}
        <if test="serviceType == 'UC'">
           AND CSRD.PROJECT_ID = #{projectId}
        </if>
        <if test="channel != 'ALL'">
            <choose>
                <when test="channel == 'LMS'">
                    AND CSRD.CH = 'MMS'
                </when>
                <otherwise>
                    AND CSRD.CH = #{channel}
                </otherwise>
            </choose>
        </if>
        GROUP BY CSRD.RESULT_CODE
        ORDER BY SUM(CNT) DESC
        LIMIT 10
	</select>

	<select id="selectChFailCodeCntList" resultType="camel">
		/* dashboard.selectChFailCodeCntList */
		SELECT
			A.DATE,
			A.CNT
		FROM (
			SELECT
				AD.DATE,
				IFNULL(CSRD.CNT, 0) AS CNT
			FROM (
				<choose>
					<when test="startMonthStr != null and startMonthStr != ''">
				SELECT DATE_FORMAT(A.DATE, '%y-%m')	AS DATE
					</when>
					<otherwise>
				SELECT A.DATE
					</otherwise>
				</choose>
				FROM (
				    SELECT CURDATE() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY AS DATE
				    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
				    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
				    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
				    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
				) A
				<choose>
					<when test="startMonthStr != null and startMonthStr != ''">
				WHERE A.DATE BETWEEN STR_TO_DATE(CONCAT(#{startMonthStr}, '-01'), '%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{endMonthStr}, '-01'), '%Y-%m-%d')
				GROUP BY DATE_FORMAT(A.DATE, '%y-%m')
					</when>
					<otherwise>
				WHERE A.DATE BETWEEN STR_TO_DATE(#{startDateStr}, '%Y-%m-%d') AND STR_TO_DATE(#{endDateStr}, '%Y-%m-%d')
					</otherwise>
				</choose>
			) AD
			LEFT OUTER JOIN (
				SELECT 
					CH,
					YMD,
					DATE_FORMAT(YMD, '%y-%m') AS YM,
					RESULT_CODE,
					SUM(CNT) AS CNT
				FROM 
					cm.CM_STAT_RSLT_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND RESULT_CODE = #{resultCode}
				<if test="channel != 'ALL'">
					<choose>
						<when test="channel == 'LMS'">
							AND CH = 'MMS'
						</when>
						<otherwise>
							AND CH = #{channel}
						</otherwise>
					</choose>
				</if>
				<choose>
					<when test="startMonthStr != null and startMonthStr != ''">
				AND YMD BETWEEN STR_TO_DATE(CONCAT(#{startMonthStr}, '-01'), '%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{endMonthStr}, '-01'), '%Y-%m-%d')
				GROUP BY DATE_FORMAT(YMD, '%y-%m')
					</when>
					<otherwise>
				AND YMD BETWEEN STR_TO_DATE(#{startDateStr}, '%Y-%m-%d') AND STR_TO_DATE(#{endDateStr}, '%Y-%m-%d')
				GROUP BY YMD
					</otherwise>
				</choose>
			) CSRD
			<choose>
				<when test="startMonthStr != null and startMonthStr != ''">
			ON AD.DATE = CSRD.YM
				</when>
				<otherwise>
			ON AD.DATE = CSRD.YMD
				</otherwise>
			</choose>
			ORDER BY AD.DATE
		) A
	</select>

	<select id="selectRtUsedTimeLineList" resultType="camel">
		/* dashboard.selectRtUsedTimeLineList */
		SELECT
			DATE_FORMAT(STR_TO_DATE(AD.DATE, '%Y%m%d%H'), '%H') AS DATE
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y%m%d%H') AS DATE 
			FROM (
			    SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY) - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY_HOUR AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y-%m-%d'), ' 00:00:00') and CONCAT(DATE_FORMAT(SYSDATE()+1, '%Y-%m-%d'), ' 23:00:00')
		) AD
		LEFT OUTER JOIN (
			SELECT
				CH,
				YMDHM,
				SUM(TOT_CNT) AS TOT_CNT
			FROM (
				SELECT 
					CH,
					DATE_FORMAT(STR_TO_DATE(YMDHM, '%Y%m%d%H%i'), '%Y%m%d%H') AS YMDHM,
					SUM(TOT_CNT) AS TOT_CNT
				FROM 
					cm.CM_STAT_CH_MIN
				WHERE CORP_ID = #{corpId}
				AND PROJECT_ID = #{projectId}
				AND YMDHM BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d'), '0000') and CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i'), '2359')
				GROUP BY YMDHM
			) A
			GROUP BY YMDHM
		) CSCD ON AD.DATE = CSCD.YMDHM
		GROUP BY AD.DATE
		ORDER BY AD.DATE
	</select>

	<select id="selectRtUsedDataList" resultType="camel">
		/* dashboard.selectRtUsedDataList */
		SELECT
			DATE_FORMAT(STR_TO_DATE(AD.DATE, '%Y%m%d%H'), '%H') AS DATE,
			CSCD.CH,
			IFNULL(CSCD.TOT_CNT, 0) AS TOT_CNT
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y%m%d%H') AS DATE 
			FROM (
			    SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY) - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY_HOUR AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y-%m-%d'), ' 00:00:00') and CONCAT(DATE_FORMAT(SYSDATE()+1, '%Y-%m-%d'), ' 23:00:00')
		) AD
		LEFT OUTER JOIN (
			SELECT
				CH,
				YMDHM,
				SUM(TOT_CNT) AS TOT_CNT
			FROM (
				SELECT 
					CH,
					DATE_FORMAT(STR_TO_DATE(YMDHM, '%Y%m%d%H%i'), '%Y%m%d%H') AS YMDHM,
					SUM(TOT_CNT) AS TOT_CNT
				FROM 
					cm.CM_STAT_CH_MIN
				WHERE CORP_ID = #{corpId}
				AND PROJECT_ID = #{projectId}
				<if test="channel != 'ALL'">
					<choose>
						<when test="channel == 'LMS'">
							AND CH = 'MMS'
							AND PRODUCT_CODE = #{channel}
						</when>
						<when test="channel == 'MMS'">
							AND CH = #{channel}
							AND PRODUCT_CODE = #{channel}
						</when>
						<otherwise>
							AND CH = #{channel}
						</otherwise>
					</choose>
				</if>
				AND YMDHM BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d'), '0000') and CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i'), '2359')
				GROUP BY YMDHM
			) A
			GROUP BY YMDHM
		) CSCD ON AD.DATE = CSCD.YMDHM
		ORDER BY AD.DATE
	</select>

	<select id="selectMonthUsedTimeLineList" resultType="camel">
		/* dashboard.selectMonthUsedTimeLineList */
		SELECT CONCAT(DATE_FORMAT(NOW(), '%Y-%m'),'-',LPAD(a.a+(b.a)*6+1,2,'0')) AS DATE
	      FROM (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5) a
	         , (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5) b
		 WHERE CONCAT(DATE_FORMAT(NOW(), '%Y-%m'),'-',LPAD(a.a+(b.a)*6+1,2,'0')) BETWEEN LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY AND LAST_DAY(CURDATE())
	</select>

	<select id="selectMonthUsedDataList" resultType="camel">
		/* dashboard.selectMonthUsedDataList */
		SELECT
			AD.DATE,
			CH,
			IFNULL(CSCD.TOT_CNT, 0) AS TOT_CNT
		FROM (
			SELECT A.DATE 
			FROM (
			    SELECT DATE_ADD(CURDATE(), INTERVAL 1 MONTH) - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY , '%Y-%m-%d') AND DATE_FORMAT(LAST_DAY(CURDATE()), '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				CH,
				YMD,
				SUM(TOT_CNT) AS TOT_CNT
			FROM 
				cm.CM_STAT_CH_DAY
			WHERE CORP_ID = #{corpId}
			AND YMD BETWEEN DATE_FORMAT(LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY , '%Y-%m-%d') AND DATE_FORMAT(LAST_DAY(CURDATE()), '%Y-%m-%d')
			<if test="channel != 'ALL'">
				<choose>
					<when test="channel == 'LMS'">
						AND CH = 'MMS'
						AND PRODUCT_CODE = #{channel}
					</when>
					<when test="channel == 'MMS'">
						AND CH = #{channel}
						AND PRODUCT_CODE = #{channel}
					</when>
					<otherwise>
						AND CH = #{channel}
					</otherwise>
				</choose>
			</if>
			GROUP BY YMD
		) CSCD ON AD.DATE = CSCD.YMD
		ORDER BY AD.DATE
	</select>

	<select id="selectSixMonthUsedTimeLineList" resultType="camel">
		/* dashboard.selectSixMonthUsedTimeLineList */
		SELECT
			AD.DATE
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y-%m') AS DATE 
			FROM (
			    SELECT CURDATE() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) MONTH AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				YM
			FROM 
				cm.CM_STAT_CH_MONTH
			WHERE CORP_ID = #{corpId}
			AND YM BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
			GROUP BY YM
		) CSCM ON AD.DATE = CSCM.YM
		ORDER BY AD.DATE
	</select>

	<select id="selectSixMonthUsedDataList" resultType="camel">
		/* dashboard.selectSixMonthUsedDataList */
		SELECT
			AD.DATE,
			CH,
			IFNULL(CSCM.TOT_CNT, 0) AS TOT_CNT
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y-%m') AS DATE 
			FROM (
			    SELECT curdate() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) MONTH AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				CH,
				DATE_FORMAT(YM, '%Y-%m') AS YM,
				SUM(TOT_CNT) AS TOT_CNT
			FROM 
				cm.CM_STAT_CH_MONTH
			WHERE CORP_ID = #{corpId}
			AND YM BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
			<if test="channel != 'ALL'">
				<choose>
					<when test="channel == 'LMS'">
						AND CH = 'MMS'
						AND PRODUCT_CODE = #{channel}
					</when>
					<when test="channel == 'MMS'">
						AND CH = #{channel}
						AND PRODUCT_CODE = #{channel}
					</when>
					<otherwise>
						AND CH = #{channel}
					</otherwise>
				</choose>
			</if>
			GROUP BY CH, YM
		) CSCM ON AD.DATE = CSCM.YM
		ORDER BY AD.DATE
	</select>

</mapper>