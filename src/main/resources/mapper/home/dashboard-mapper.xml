<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dashboard">

	<select id="selectProjectInfo" resultType="camel">
		/* dashboard.selectProjectInfo */
		SELECT
			CP.PROJECT_ID,
			CP.PROJECT_NAME,
			CP.USE_CH_GRP_INFO,
			CONCAT(CU.USER_NAME, '(', CU.LOGIN_ID ,')') AS USER_INFO,
			DATE_FORMAT(CP.REG_DT, '%Y-%m-%d') AS REG_DT
		FROM	cm_console.CM_PROJECT CP
			INNER JOIN cm_console.CM_USER CU
				ON CP.REG_ID = CU.USER_ID
		WHERE	CP.PROJECT_ID	= #{projectId}
	</select>

	<select id="selectProjectList" resultType="camel">
		/* dashboard.selectProjectList */
		SELECT
			CP.PROJECT_ID,
			CP.PROJECT_NAME,
			CP.PAY_TYPE,
			CP.USE_CH_GRP_INFO,
			CASE 
				WHEN CP.PAY_TYPE = 'Y' THEN '선불'
				ELSE '후불'
			END PAY_TYPE_CD_NAME,
			CP.REG_DT,
			DATE_FORMAT(CP.REG_DT, '%Y-%m-%d') AS REG_DT_YMD
		FROM cm_console.CM_PROJECT CP
			INNER JOIN cm_console.CM_PROJECT_USER CPU
				ON CP.PROJECT_ID = CPU.PROJECT_ID
		WHERE CP.CORP_ID = #{corpId}
		AND	CP.DEL_YN != 'Y'
		AND	CP.USE_YN = 'Y'
		AND CPU.USER_ID = #{userId}
		ORDER BY CP.REG_DT DESC
		LIMIT 3
	</select>

	<select id="selectNoticeList" resultType="camel">
		/* dashboard.selectNoticeList */
		SELECT
			NOTICE_ID,
			NOTICE_TYPE,
			cm_console.fnc_get_cd_name('NOTICE_TYPE', NOTICE_TYPE, 1) AS NOTICE_TYPE_CD_NAME,
			TITLE,
			REG_DT,
			DATE_FORMAT(REG_DT, '%Y-%m-%d') AS REG_DT_YMD
		FROM cm_bo.CM_NOTICE
		WHERE VIEW_TYPE IN ('ALL', 'OUT')
		ORDER BY REG_DT DESC
		LIMIT 3
	</select>

	<select id="selectChTotCnt" resultType="camel">
        /* dashboard.selectChTotCnt */
		SELECT IFNULL(SUM(SUCC_CNT), 0) AS TOTAL_SUCC_CNT
	     , IFNULL(SUM(FAIL_CNT), 0) AS TOTAL_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'PUSH' THEN SUCC_CNT ELSE 0 END)), 0) AS PUSH_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'PUSH' THEN FAIL_CNT ELSE 0 END)), 0) AS PUSH_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'RCS' THEN SUCC_CNT ELSE 0 END)), 0) AS RCS_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'RCS' THEN FAIL_CNT ELSE 0 END)), 0) AS RCS_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'ALIMTALK' THEN SUCC_CNT ELSE 0 END)), 0) AS ALIM_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'ALIMTALK' THEN FAIL_CNT ELSE 0 END)), 0) AS ALIM_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'FRIENDTALK' THEN SUCC_CNT ELSE 0 END)), 0) AS FRIEND_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'FRIENDTALK' THEN FAIL_CNT ELSE 0 END)), 0) AS FRIEND_FAIL_CNT
	     , IFNULL(SUM((CASE CH WHEN 'SMS' THEN SUCC_CNT ELSE 0 END)), 0) AS SMS_SUCC_CNT
	     , IFNULL(SUM((CASE CH WHEN 'SMS' THEN FAIL_CNT ELSE 0 END)), 0) AS SMS_FAIL_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'LMS' THEN SUCC_CNT ELSE 0 END)), 0) AS LMS_SUCC_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'LMS' THEN FAIL_CNT ELSE 0 END)), 0) AS LMS_FAIL_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'MMS' THEN SUCC_CNT ELSE 0 END)), 0) AS MMS_SUCC_CNT
	     , IFNULL(SUM((CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'MMS' THEN FAIL_CNT ELSE 0 END)), 0) AS MMS_FAIL_CNT
    <choose>
        <when test="startMonthStr != null and startMonthStr != ''">
      FROM cm.CM_STAT_CH_MONTH
        </when>
        <otherwise>
      FROM cm.CM_STAT_CH_DAY
        </otherwise>
    </choose>
     WHERE CORP_ID = #{corpId}
	<if test="serviceType == 'UC'">
	   AND PROJECT_ID = #{projectId}
	</if>
    <choose>
        <when test="startMonthStr != null and startMonthStr != ''">
       AND YM BETWEEN STR_TO_DATE(CONCAT(#{startMonthStr}, '-01'), '%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{endMonthStr}, '-31'), '%Y-%m-%d')
        </when>
        <otherwise>
       AND YMD BETWEEN STR_TO_DATE(#{startDateStr}, '%Y-%m-%d') AND STR_TO_DATE(#{endDateStr}, '%Y-%m-%d')
        </otherwise>
    </choose>
	</select>

	<select id="selectChSuccFailCntList" resultType="camel">
		/* dashboard.selectChSuccFailCntList */
		SELECT
			AD.DATE,
			IFNULL(CSCD.SUCC_CNT, 0) AS SUCC_CNT,
			IFNULL(CSCD.FAIL_CNT, 0) AS FAIL_CNT
		FROM (
			<choose>
				<when test="startMonthStr != null and startMonthStr != ''">
			SELECT DATE_FORMAT(A.DATE, '%y-%m')	AS DATE
          FROM (SELECT CONCAT(#{startMonthStr}, '-01') + INTERVAL (a.a + (6 * b.a) ) MONTH AS DATE
				</when>
				<otherwise>
			SELECT A.DATE
          FROM (SELECT #{startDateStr} + INTERVAL (a.a + (6 * b.a) ) DAY AS DATE
				</otherwise>
			</choose>
                  FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5) AS a
                     , (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5) AS b) AS A
			<choose>
				<when test="startMonthStr != null and startMonthStr != ''">
			WHERE A.DATE BETWEEN CONCAT(#{startMonthStr}, '-01') AND CONCAT(#{endMonthStr}, '-31')
				</when>
				<otherwise>
			WHERE A.DATE BETWEEN #{startDateStr} AND #{endDateStr}
				</otherwise>
			</choose>
		) AD
		LEFT OUTER JOIN (
			SELECT 
				CH,
            <choose>
                <when test="startMonthStr != null and startMonthStr != ''">
                YM AS YMD,
                DATE_FORMAT(YM, '%y-%m') AS YM,
                </when>
                <otherwise>
                YMD,
                DATE_FORMAT(YMD, '%y-%m') AS YM,
                </otherwise>
            </choose>
				SUM(SUCC_CNT) AS SUCC_CNT,
				SUM(FAIL_CNT) AS FAIL_CNT
            <choose>
                <when test="startMonthStr != null and startMonthStr != ''">
            FROM cm.CM_STAT_CH_MONTH
                </when>
                <otherwise>
            FROM cm.CM_STAT_CH_DAY
                </otherwise>
            </choose>
			WHERE CORP_ID = #{corpId}
			<if test="serviceType == 'UC'">
			AND PROJECT_ID = #{projectId}
			</if>
			<if test="channel != 'ALL'">
				<choose>
					<when test="channel == 'LMS'">
						AND CH = 'MMS'
						AND PRODUCT_CODE = #{channel}
					</when>
					<when test="channel == 'MMS'">
						AND CH = #{channel}
						AND PRODUCT_CODE = #{channel}
					</when>
					<otherwise>
						AND CH = #{channel}
					</otherwise>
				</choose>
			</if>
			<choose>
				<when test="startMonthStr != null and startMonthStr != ''">
			AND YM BETWEEN STR_TO_DATE(CONCAT(#{startMonthStr}, '-01'), '%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{endMonthStr}, '-31'), '%Y-%m-%d')
			GROUP BY DATE_FORMAT(YMD, '%y-%m')
				</when>
				<otherwise>
			AND YMD BETWEEN STR_TO_DATE(#{startDateStr}, '%Y-%m-%d') AND STR_TO_DATE(#{endDateStr}, '%Y-%m-%d')
			GROUP BY YMD
				</otherwise>
			</choose>
		) CSCD
		<choose>
			<when test="startMonthStr != null and startMonthStr != ''">
		ON AD.DATE = CSCD.YM
			</when>
			<otherwise>
		ON AD.DATE = CSCD.YMD
			</otherwise>
		</choose>
		ORDER BY AD.DATE
	</select>

	<select id="selectChFailCodeList" resultType="camel">
        /* dashboard.selectChFailCodeList */
        SELECT RESULT_CODE
             , IFNULL(CCG.GW_MESSAGE, '미등록코드') AS RESULT_MESSAGE
             , SUM(CNT) AS CNT
          FROM cm.CM_CODE_GW       CCG
    <choose>
        <when test="startMonthStr != null and startMonthStr != ''">
             , cm.CM_STAT_RSLT_MONTH CSRD
         WHERE CSRD.YM BETWEEN CONCAT(#{startMonthStr}, '-01') AND CONCAT(#{endMonthStr}, '-31')
        </when>
        <otherwise>
             , cm.CM_STAT_RSLT_DAY CSRD
         WHERE CSRD.YMD BETWEEN #{startDateStr} AND #{endDateStr}
        </otherwise>
    </choose>
           AND CSRD.RESULT_CODE = CCG.GW_CODE
           AND CSRD.RESULT_CODE > '10000'
           AND CORP_ID = #{corpId}
        <if test="serviceType == 'UC'">
           AND CSRD.PROJECT_ID = #{projectId}
        </if>
        <if test="channel != 'ALL'">
            <choose>
                <when test="channel == 'LMS'">
                    AND CSRD.CH = 'MMS'
                </when>
                <otherwise>
                    AND CSRD.CH = #{channel}
                </otherwise>
            </choose>
        </if>
        GROUP BY CSRD.RESULT_CODE
        ORDER BY SUM(CNT) DESC
        LIMIT 10
	</select>

	<select id="selectChFailCodeCntList" resultType="camel">
		/* dashboard.selectChFailCodeCntList */
        SELECT B.RESULT_CODE
             , A.DATE
             , (SELECT SUM(CNT) 
		    <choose>
		        <when test="startMonthStr != null and startMonthStr != ''">
                  FROM cm.CM_STAT_RSLT_MONTH X
                  WHERE X.YM = A.DATE 
		        </when>
		        <otherwise>
                  FROM cm.CM_STAT_RSLT_DAY X
                  WHERE X.YMD = A.DATE  
		        </otherwise>
		    </choose>
                  AND X.RESULT_CODE = B.RESULT_CODE AND CORP_ID = #{corpId}
        <if test="serviceType == 'UC'">
        AND PROJECT_ID = #{projectId}
        </if>
        <if test="channel != 'ALL'">
            <choose>
                <when test="channel == 'LMS'">
                    AND X.CH = 'MMS'
                </when>
                <otherwise>
                    AND X.CH = #{channel}
                </otherwise>
            </choose>
        </if>) AS CNT
            <choose>
                <when test="startMonthStr != null and startMonthStr != ''">
          FROM (SELECT CONCAT(#{startMonthStr}, '-01') + INTERVAL (a.a + (6 * b.a) ) MONTH AS DATE
                </when>
                <otherwise>
          FROM (SELECT #{startDateStr} + INTERVAL (a.a + (6 * b.a) ) DAY AS DATE
                </otherwise>
            </choose>
                      FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5) AS a
                         , (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5) AS b) AS A
                         , (<foreach collection="rtnList" index="index" item="data" separator=" UNION ALL">SELECT #{data.resultCode} AS RESULT_CODE, #{index} AS OD</foreach>) AS B
        <choose>
            <when test="startMonthStr != null and startMonthStr != ''">
         WHERE DATE BETWEEN CONCAT(#{startMonthStr}, '-01') AND CONCAT(#{endMonthStr}, '-31')
            </when>
            <otherwise>
         WHERE DATE BETWEEN #{startDateStr} AND #{endDateStr}
            </otherwise>
        </choose>
         ORDER BY B.OD, A.DATE
	</select>

	<select id="selectRtUsedTimeLineList" resultType="camel">
		/* dashboard.selectRtUsedTimeLineList */
		SELECT CURDATE() - INTERVAL (a.a + (6 * b.a) ) DAY AS DATE
          FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5) AS a
             , (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5) AS b
	</select>

	<select id="selectRtUsedDataList" resultType="camel">
        /* dashboard.selectRtUsedDataList */
        SELECT SUBSTR(YMDH,9,12) AS DATE
             , IFNULL(SUM(TOT_CNT),0) AS TOT_CNT
             , IFNULL(SUM(CASE CH WHEN 'PUSH' THEN TOT_CNT ELSE 0 END),0) AS PUSH_CNT
             , IFNULL(SUM(CASE CH WHEN 'RCS' THEN TOT_CNT ELSE 0 END),0) AS RCS_CNT
             , IFNULL(SUM(CASE CH WHEN 'FRIENDTALK' THEN TOT_CNT ELSE 0 END),0) AS FRIENDTALK_CNT
             , IFNULL(SUM(CASE CH WHEN 'ALIMTALK' THEN TOT_CNT ELSE 0 END),0) AS ALIMTALK_CNT
             , IFNULL(SUM(CASE CH WHEN 'SMS' THEN TOT_CNT ELSE 0 END),0) AS SMS_CNT
             , IFNULL(SUM(CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'LMS' THEN TOT_CNT ELSE 0 END),0) AS LMS_CNT
             , IFNULL(SUM(CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'MMS' THEN TOT_CNT ELSE 0 END),0) AS MMS_CNT
          FROM (
            SELECT CONCAT(DATE_FORMAT(NOW(), '%Y%m%d'),LPAD(a.a+(b.a-1)*4-1,2,'0')) AS YMDH
                FROM (SELECT 1 AS a UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4) a
                 , (SELECT 1 AS a UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6) b) AS A
          LEFT JOIN cm.CM_STAT_CH_MIN b
            ON YMDHM BETWEEN DATE_FORMAT(NOW(), '%Y%m%d0000') and DATE_FORMAT(NOW(), '%Y%m%d2359')
           AND A.YMDH = SUBSTR(YMDHM, 1, 10)
           AND CORP_ID = #{corpId}
           AND PROJECT_ID = #{projectId}
          GROUP BY YMDH
	</select>

	<select id="selectMonthUsedTimeLineList" resultType="camel">
		/* dashboard.selectMonthUsedTimeLineList */
		SELECT CONCAT(DATE_FORMAT(NOW(), '%Y-%m'),'-',LPAD(a.a+(b.a)*6+1,2,'0')) AS DATE
	      FROM (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5) a
	         , (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5) b
		 WHERE CONCAT(DATE_FORMAT(NOW(), '%Y-%m'),'-',LPAD(a.a+(b.a)*6+1,2,'0')) BETWEEN LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY AND LAST_DAY(CURDATE())
	</select>

	<select id="selectMonthUsedDataList" resultType="camel">
		/* dashboard.selectMonthUsedDataList */
		SELECT A.DATE
		         , IFNULL(SUM(CASE CH WHEN 'PUSH' THEN TOT_CNT ELSE 0 END),0) AS PUSH_CNT
		         , IFNULL(SUM(CASE CH WHEN 'RCS' THEN TOT_CNT ELSE 0 END),0) AS RCS_CNT
		         , IFNULL(SUM(CASE CH WHEN 'FRIENDTALK' THEN TOT_CNT ELSE 0 END),0) AS FRIENDTALK_CNT
		         , IFNULL(SUM(CASE CH WHEN 'ALIMTALK' THEN TOT_CNT ELSE 0 END),0) AS ALIMTALK_CNT
		         , IFNULL(SUM(CASE CH WHEN 'SMS' THEN TOT_CNT ELSE 0 END),0) AS SMS_CNT
		         , IFNULL(SUM(CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'LMS' THEN TOT_CNT ELSE 0 END),0) AS LMS_CNT
		         , IFNULL(SUM(CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'MMS' THEN TOT_CNT ELSE 0 END),0) AS MMS_CNT
		  FROM (
		        SELECT CONCAT(DATE_FORMAT(NOW(), '%Y-%m'),'-',LPAD(a.a+(b.a)*6+1,2,'0')) AS DATE
		          FROM (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5) a
		             , (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5) b
		         WHERE CONCAT(DATE_FORMAT(NOW(), '%Y-%m'),'-',LPAD(a.a+(b.a)*6+1,2,'0')) BETWEEN LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY AND LAST_DAY(CURDATE())) A
		  LEFT JOIN cm.CM_STAT_CH_DAY B
		    ON CORP_ID = #{corpId}
		   AND YMD BETWEEN LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY AND LAST_DAY(CURDATE())
		   AND B.YMD = A.DATE
		 GROUP BY A.DATE
	</select>

	<select id="selectSixMonthUsedTimeLineList" resultType="camel">
		/* dashboard.selectSixMonthUsedTimeLineList */
        SELECT DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -A.a MONTH), '%Y-%m') AS DATE
          FROM (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6) AS A
         ORDER BY 1
	</select>

	<select id="selectSixMonthUsedDataList" resultType="camel">
		/* dashboard.selectSixMonthUsedDataList */
        SELECT DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -A.a MONTH), '%Y-%m') AS DATE
             , IFNULL(SUM(TOT_CNT),0) AS TOT_CNT
             , IFNULL(SUM(CASE CH WHEN 'PUSH' THEN TOT_CNT ELSE 0 END),0) AS PUSH_CNT
             , IFNULL(SUM(CASE CH WHEN 'RCS' THEN TOT_CNT ELSE 0 END),0) AS RCS_CNT
             , IFNULL(SUM(CASE CH WHEN 'FRIENDTALK' THEN TOT_CNT ELSE 0 END),0) AS FRIENDTALK_CNT
             , IFNULL(SUM(CASE CH WHEN 'ALIMTALK' THEN TOT_CNT ELSE 0 END),0) AS ALIMTALK_CNT
             , IFNULL(SUM(CASE CH WHEN 'SMS' THEN TOT_CNT ELSE 0 END),0) AS SMS_CNT
             , IFNULL(SUM(CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'LMS' THEN TOT_CNT ELSE 0 END),0) AS LMS_CNT
             , IFNULL(SUM(CASE WHEN CH = 'MMS' AND PRODUCT_CODE = 'MMS' THEN TOT_CNT ELSE 0 END),0) AS MMS_CNT
          FROM (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6) AS A
          LEFT JOIN cm.CM_STAT_CH_MONTH B
            ON YM BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-01') AND DATE_FORMAT(CURDATE(), '%Y-%m-31')
           AND CORP_ID = #{corpId}
           AND B.YM = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -A.a MONTH), '%Y-%m-01')
          GROUP BY DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL -A.a MONTH), '%Y-%m-01')
	</select>

</mapper>