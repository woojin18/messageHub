<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dashboard">

	<select id="selectProjectInfo" resultType="camel">
		/* dashboard.selectProjectInfo */
		SELECT
			CP.PROJECT_ID,
			CP.PROJECT_NAME,
			CP.USE_CH_GRP_INFO,
			CONCAT(CU.USER_NAME, '(', CU.LOGIN_ID ,')') AS USER_INFO,
			DATE_FORMAT(CP.REG_DT, '%Y-%m-%d') AS REG_DT
		FROM	cm_console.CM_PROJECT CP
			INNER JOIN cm_console.CM_USER CU
				ON CP.REG_ID = CU.USER_ID
		WHERE	CP.PROJECT_ID	= #{projectId}
	</select>

	<select id="selectProjectList" resultType="camel">
		/* dashboard.selectProjectList */
		SELECT
			CP.PROJECT_ID,
			CP.PROJECT_NAME,
			CP.PAY_TYPE,
			CP.USE_CH_GRP_INFO,
			CASE 
				WHEN CP.PAY_TYPE = 'Y' THEN '선불'
				ELSE '후불'
			END PAY_TYPE_CD_NAME,
			CP.REG_DT,
			DATE_FORMAT(CP.REG_DT, '%Y-%m-%d') AS REG_DT_YMD
		FROM cm_console.CM_PROJECT CP
			INNER JOIN cm_console.CM_PROJECT_USER CPU
				ON CP.PROJECT_ID = CPU.PROJECT_ID
		WHERE CP.CORP_ID = 'COM2104142281316'
		AND	CP.DEL_YN != 'Y'
		AND	CP.USE_YN = 'Y'
		AND CPU.USER_ID = #{userId}
		ORDER BY CP.REG_DT DESC
		LIMIT 3
	</select>

	<select id="selectNoticeList" resultType="camel">
		/* dashboard.selectNoticeList */
		SELECT
			NOTICE_ID,
			NOTICE_TYPE,
			cm_console.fnc_get_cd_name('NOTICE_TYPE', NOTICE_TYPE, 1) AS NOTICE_TYPE_CD_NAME,
			TITLE,
			REG_DT,
			DATE_FORMAT(REG_DT, '%Y-%m-%d') AS REG_DT_YMD
		FROM cm_bo.CM_NOTICE
		ORDER BY REG_DT DESC
		LIMIT 3
	</select>

	<select id="selectChTotCnt" resultType="camel">
		/* dashboard.selectChTotCnt */
		SELECT
			SUM(PUSH_SUCC_CNT) AS PUSH_SUCC_CNT,
			SUM(PUSH_FAIL_CNT) AS PUSH_FAIL_CNT,
			SUM(RCS_SUCC_CNT) AS RCS_SUCC_CNT,
			SUM(RCS_FAIL_CNT) AS RCS_FAIL_CNT,
			SUM(ALIM_SUCC_CNT) AS ALIM_SUCC_CNT,
			SUM(ALIM_FAIL_CNT) AS ALIM_FAIL_CNT,
			SUM(FRIEND_SUCC_CNT) AS FRIEND_SUCC_CNT,
			SUM(FRIEND_FAIL_CNT) AS FRIEND_FAIL_CNT,
			SUM(SMS_SUCC_CNT) AS SMS_SUCC_CNT,
			SUM(SMS_FAIL_CNT) AS SMS_FAIL_CNT,
			SUM(MMS_SUCC_CNT) AS MMS_SUCC_CNT,
			SUM(MMS_FAIL_CNT) AS MMS_FAIL_CNT
		FROM (
			SELECT
				IFNULL(B.SUCC_CNT, 0) AS PUSH_SUCC_CNT,
				IFNULL(B.FAIL_CNT, 0) AS PUSH_FAIL_CNT,
				0 AS RCS_SUCC_CNT,
				0 AS RCS_FAIL_CNT,
				0 AS ALIM_SUCC_CNT,
				0 AS ALIM_FAIL_CNT,
				0 AS FRIEND_SUCC_CNT,
				0 AS FRIEND_FAIL_CNT,
				0 AS SMS_SUCC_CNT,
				0 AS SMS_FAIL_CNT,
				0 AS MMS_SUCC_CNT,
				0 AS MMS_FAIL_CNT
			FROM (
				SELECT 'PUSH' AS CH
				FROM DUAL
			) A
			LEFT OUTER JOIN (
				SELECT 
					CH,
					SUM(SUCC_CNT) AS SUCC_CNT,
					SUM(FAIL_CNT) AS FAIL_CNT
				FROM 
					cm.CM_STAT_CH_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
				GROUP BY CH
			) B ON A.CH = B.CH
			UNION ALL
			SELECT
				0 AS PUSH_SUCC_CNT,
				0 AS PUSH_FAIL_CNT,
				IFNULL(B.SUCC_CNT, 0) AS RCS_SUCC_CNT,
				IFNULL(B.FAIL_CNT, 0) AS RCS_FAIL_CNT,
				0 AS ALIM_SUCC_CNT,
				0 AS ALIM_FAIL_CNT,
				0 AS FRIEND_SUCC_CNT,
				0 AS FRIEND_FAIL_CNT,
				0 AS SMS_SUCC_CNT,
				0 AS SMS_FAIL_CNT,
				0 AS MMS_SUCC_CNT,
				0 AS MMS_FAIL_CNT
			FROM (
				SELECT 'RCS' AS CH
				FROM DUAL
			) A
			LEFT OUTER JOIN (
				SELECT 
					CH,
					SUM(SUCC_CNT) AS SUCC_CNT,
					SUM(FAIL_CNT) AS FAIL_CNT
				FROM 
					cm.CM_STAT_CH_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
				GROUP BY CH
			) B ON A.CH = B.CH
			UNION ALL
			SELECT
				0 AS PUSH_SUCC_CNT,
				0 AS PUSH_FAIL_CNT,
				0 AS RCS_SUCC_CNT,
				0 AS RCS_FAIL_CNT,
				IFNULL(B.SUCC_CNT, 0) AS ALIM_SUCC_CNT,
				IFNULL(B.FAIL_CNT, 0) AS ALIM_FAIL_CNT,
				0 AS FRIEND_SUCC_CNT,
				0 AS FRIEND_FAIL_CNT,
				0 AS SMS_SUCC_CNT,
				0 AS SMS_FAIL_CNT,
				0 AS MMS_SUCC_CNT,
				0 AS MMS_FAIL_CNT
			FROM (
				SELECT 'ALIMTALK' AS CH
				FROM DUAL
			) A
			LEFT OUTER JOIN (
				SELECT 
					CH,
					SUM(SUCC_CNT) AS SUCC_CNT,
					SUM(FAIL_CNT) AS FAIL_CNT
				FROM 
					cm.CM_STAT_CH_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
				GROUP BY CH
			) B ON A.CH = B.CH
			UNION ALL
			SELECT
				0 AS PUSH_SUCC_CNT,
				0 AS PUSH_FAIL_CNT,
				0 AS RCS_SUCC_CNT,
				0 AS RCS_FAIL_CNT,
				0 AS ALIM_SUCC_CNT,
				0 AS ALIM_FAIL_CNT,
				IFNULL(B.SUCC_CNT, 0) AS FRIEND_SUCC_CNT,
				IFNULL(B.FAIL_CNT, 0) AS FRIEND_FAIL_CNT,
				0 AS SMS_SUCC_CNT,
				0 AS SMS_FAIL_CNT,
				0 AS MMS_SUCC_CNT,
				0 AS MMS_FAIL_CNT
			FROM (
				SELECT 'FRIENDTALK' AS CH
				FROM DUAL
			) A
			LEFT OUTER JOIN (
				SELECT 
					CH,
					SUM(SUCC_CNT) AS SUCC_CNT,
					SUM(FAIL_CNT) AS FAIL_CNT
				FROM 
					cm.CM_STAT_CH_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
				GROUP BY CH
			) B ON A.CH = B.CH
			UNION ALL
			SELECT
				0 AS PUSH_SUCC_CNT,
				0 AS PUSH_FAIL_CNT,
				0 AS RCS_SUCC_CNT,
				0 AS RCS_FAIL_CNT,
				0 AS ALIM_SUCC_CNT,
				0 AS ALIM_FAIL_CNT,
				0 AS FRIEND_SUCC_CNT,
				0 AS FRIEND_FAIL_CNT,
				IFNULL(B.SUCC_CNT, 0) AS SMS_SUCC_CNT,
				IFNULL(B.FAIL_CNT, 0) AS SMS_FAIL_CNT,
				0 AS MMS_SUCC_CNT,
				0 AS MMS_FAIL_CNT
			FROM (
				SELECT 'SMS' AS CH
				FROM DUAL
			) A
			LEFT OUTER JOIN (
				SELECT 
					CH,
					SUM(SUCC_CNT) AS SUCC_CNT,
					SUM(FAIL_CNT) AS FAIL_CNT
				FROM 
					cm.CM_STAT_CH_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
				GROUP BY CH
			) B ON A.CH = B.CH
			UNION ALL
			SELECT
				0 AS PUSH_SUCC_CNT,
				0 AS PUSH_FAIL_CNT,
				0 AS RCS_SUCC_CNT,
				0 AS RCS_FAIL_CNT,
				0 AS ALIM_SUCC_CNT,
				0 AS ALIM_FAIL_CNT,
				0 AS FRIEND_SUCC_CNT,
				0 AS FRIEND_FAIL_CNT,
				0 AS SMS_SUCC_CNT,
				0 AS SMS_FAIL_CNT,
				IFNULL(B.SUCC_CNT, 0) AS MMS_SUCC_CNT,
				IFNULL(B.FAIL_CNT, 0) AS MMS_FAIL_CNT
			FROM (
				SELECT 'MMS' AS CH
				FROM DUAL
			) A
			LEFT OUTER JOIN (
				SELECT 
					CH,
					SUM(SUCC_CNT) AS SUCC_CNT,
					SUM(FAIL_CNT) AS FAIL_CNT
				FROM 
					cm.CM_STAT_CH_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
				GROUP BY CH
			) B ON A.CH = B.CH
		) TOT
	</select>

	<select id="selectChSuccFailCntList" resultType="camel">
		/* dashboard.selectChSuccFailCntList */
		SELECT
			AD.DATE,
			IFNULL(CSCD.SUCC_CNT, 0) AS SUCC_CNT,
			IFNULL(CSCD.FAIL_CNT, 0) AS FAIL_CNT
		FROM (
			SELECT A.DATE 
			FROM (
			    SELECT CURDATE() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				CH,
				YMD,
				SUM(SUCC_CNT) AS SUCC_CNT,
				SUM(FAIL_CNT) AS FAIL_CNT
			FROM 
				cm.CM_STAT_CH_DAY
			WHERE CORP_ID = #{corpId}
			<if test="serviceType == 'UC'">
			AND PROJECT_ID = #{projectId}
			</if>
			AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
			AND CH = #{channel}
			GROUP BY YMD
		) CSCD ON AD.DATE = CSCD.YMD
		ORDER BY AD.DATE
	</select>

	<select id="selectChFailCodeList" resultType="camel">
		/* dashboard.selectChFailCodeList */
		SELECT 
			CH,
			RESULT_CODE
		FROM 
			cm.CM_STAT_RSLT_DAY
		WHERE CORP_ID = #{corpId}
		<if test="serviceType == 'UC'">
		AND PROJECT_ID = #{projectId}
		</if>
		AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
		AND CH = #{channel}
		GROUP BY RESULT_CODE
	</select>

	<select id="selectChFailCodeCntList" resultType="camel">
		/* dashboard.selectChFailCodeCntList */
		SELECT
			A.DATE,
			A.CNT
		FROM (
			SELECT
				AD.DATE,
				IFNULL(CSRD.CNT, 0) AS CNT
			FROM (
				SELECT A.DATE 
				FROM (
				    SELECT CURDATE() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY AS DATE
				    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
				    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
				    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
				    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
				) A
				WHERE A.DATE BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
			) AD
			LEFT OUTER JOIN (
				SELECT 
					CH,
					YMD,
					RESULT_CODE,
					SUM(CNT) AS CNT
				FROM 
					cm.CM_STAT_RSLT_DAY
				WHERE CORP_ID = #{corpId}
				<if test="serviceType == 'UC'">
				AND PROJECT_ID = #{projectId}
				</if>
				AND RESULT_CODE = #{resultCode}
				AND YMD BETWEEN DATE_FORMAT(#{startDateStr}, '%Y-%m-%d') AND DATE_FORMAT(#{endDateStr}, '%Y-%m-%d')
				AND CH = #{channel}
				GROUP BY CH, YMD
			) CSRD ON AD.DATE = CSRD.YMD
			ORDER BY AD.DATE
		) A
	</select>

	<select id="selectRtUsedTimeLineList" resultType="camel">
		/* dashboard.selectRtUsedTimeLineList */
		SELECT
			DATE_FORMAT(STR_TO_DATE(AD.DATE, '%Y%m%d%H'), '%H') AS DATE
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y%m%d%H') AS DATE 
			FROM (
			    SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY) - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY_HOUR AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y-%m-%d'), ' 00:00:00') and CONCAT(DATE_FORMAT(SYSDATE()+1, '%Y-%m-%d'), ' 23:00:00')
		) AD
		LEFT OUTER JOIN (
			SELECT
				CH,
				YMDHM,
				SUM(TOT_CNT) AS TOT_CNT
			FROM (
				SELECT 
					CH,
					DATE_FORMAT(STR_TO_DATE(YMDHM, '%Y%m%d%H%i'), '%Y%m%d%H') AS YMDHM,
					SUM(TOT_CNT) AS TOT_CNT
				FROM 
					cm.CM_STAT_CH_MIN
				WHERE CORP_ID = #{corpId}
				AND PROJECT_ID = #{projectId}
				AND YMDHM BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d'), '0000') and CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i'), '2359')
				GROUP BY YMDHM
			) A
			GROUP BY YMDHM
		) CSCD ON AD.DATE = CSCD.YMDHM
		GROUP BY AD.DATE
		ORDER BY AD.DATE
	</select>

	<select id="selectRtUsedDataList" resultType="camel">
		/* dashboard.selectRtUsedDataList */
		SELECT
			DATE_FORMAT(STR_TO_DATE(AD.DATE, '%Y%m%d%H'), '%H') AS DATE,
			CSCD.CH,
			IFNULL(CSCD.TOT_CNT, 0) AS TOT_CNT
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y%m%d%H') AS DATE 
			FROM (
			    SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY) - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY_HOUR AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y-%m-%d'), ' 00:00:00') and CONCAT(DATE_FORMAT(SYSDATE()+1, '%Y-%m-%d'), ' 23:00:00')
		) AD
		LEFT OUTER JOIN (
			SELECT
				CH,
				YMDHM,
				SUM(TOT_CNT) AS TOT_CNT
			FROM (
				SELECT 
					CH,
					DATE_FORMAT(STR_TO_DATE(YMDHM, '%Y%m%d%H%i'), '%Y%m%d%H') AS YMDHM,
					SUM(TOT_CNT) AS TOT_CNT
				FROM 
					cm.CM_STAT_CH_MIN
				WHERE CORP_ID = #{corpId}
				AND PROJECT_ID = #{projectId}
				AND CH = #{channel}
				AND YMDHM BETWEEN CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d'), '0000') and CONCAT(DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i'), '2359')
				GROUP BY YMDHM
			) A
			GROUP BY YMDHM
		) CSCD ON AD.DATE = CSCD.YMDHM
		ORDER BY AD.DATE
	</select>

	<select id="selectMonthUsedTimeLineList" resultType="camel">
		/* dashboard.selectMonthUsedTimeLineList */
		SELECT
			AD.DATE
		FROM (
			SELECT A.DATE 
			FROM (
			    SELECT DATE_ADD(CURDATE(), INTERVAL 1 MONTH) - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY , '%Y-%m-%d') AND DATE_FORMAT(LAST_DAY(CURDATE()), '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				YMD
			FROM 
				cm.CM_STAT_CH_DAY
			WHERE CORP_ID = #{corpId}
			AND YMD BETWEEN DATE_FORMAT(LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY , '%Y-%m-%d') AND DATE_FORMAT(LAST_DAY(CURDATE()), '%Y-%m-%d')
			GROUP BY YMD
		) CSCD ON AD.DATE = CSCD.YMD
		ORDER BY AD.DATE
	</select>

	<select id="selectMonthUsedDataList" resultType="camel">
		SELECT
			AD.DATE,
			CH,
			IFNULL(CSCD.TOT_CNT, 0) AS TOT_CNT
		FROM (
			SELECT A.DATE 
			FROM (
			    SELECT DATE_ADD(CURDATE(), INTERVAL 1 MONTH) - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY , '%Y-%m-%d') AND DATE_FORMAT(LAST_DAY(CURDATE()), '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				CH,
				YMD,
				SUM(TOT_CNT) AS TOT_CNT
			FROM 
				cm.CM_STAT_CH_DAY
			WHERE CORP_ID = #{corpId}
			AND YMD BETWEEN DATE_FORMAT(LAST_DAY(CURDATE() - INTERVAL 1 MONTH) + INTERVAL 1 DAY , '%Y-%m-%d') AND DATE_FORMAT(LAST_DAY(CURDATE()), '%Y-%m-%d')
			AND CH = #{channel}
			GROUP BY YMD
		) CSCD ON AD.DATE = CSCD.YMD
		ORDER BY AD.DATE
	</select>

	<select id="selectSixMonthUsedTimeLineList" resultType="camel">
		SELECT
			AD.DATE
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y-%m') AS DATE 
			FROM (
			    SELECT CURDATE() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) MONTH AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				YM
			FROM 
				cm.CM_STAT_CH_MONTH
			WHERE CORP_ID = #{corpId}
			AND YM BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
			GROUP BY YM
		) CSCM ON AD.DATE = CSCM.YM
		ORDER BY AD.DATE
	</select>

	<select id="selectSixMonthUsedDataList" resultType="camel">
		SELECT
			AD.DATE,
			CH,
			IFNULL(CSCM.TOT_CNT, 0) AS TOT_CNT
		FROM (
			SELECT DATE_FORMAT(A.DATE, '%Y-%m') AS DATE 
			FROM (
			    SELECT curdate() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) MONTH AS DATE
			    FROM (SELECT 0 as a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) AS a
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS b
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS c
			    CROSS JOIN (SELECT 0 as a union all SELECT 1 union all SELECT 2 union all SELECT 3 union all SELECT 4 union all SELECT 5 union all SELECT 6 union all SELECT 7 union all SELECT 8 union all SELECT 9) AS d
			) A
			WHERE A.DATE BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
		) AD
		LEFT OUTER JOIN (
			SELECT 
				CH,
				DATE_FORMAT(YM, '%Y-%m') AS YM,
				SUM(TOT_CNT) AS TOT_CNT
			FROM 
				cm.CM_STAT_CH_MONTH
			WHERE CORP_ID = #{corpId}
			AND YM BETWEEN DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL-5 MONTH), '%Y-%m-%d') AND DATE_FORMAT(CURDATE(), '%Y-%m-%d')
			AND CH = #{channel}
			GROUP BY CH, YM
		) CSCM ON AD.DATE = CSCM.YM
		ORDER BY AD.DATE
	</select>

</mapper>