<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="urlInfo">

    <sql id ="whereSelectUrlInfoList">
        <if test="title != null and title != ''">
            AND TITLE LIKE CONCAT('%', #{title}, '%')
        </if>
        <if test="urlId != null and urlId != ''">
            AND A.URL_ID = #{urlId}
        </if>
        <if test="orgUrl != null and orgUrl != ''">
            AND ORG_URL LIKE CONCAT('%', #{orgUrl}, '%')
        </if>
        <if test="projectId != null and projectId != ''">
            AND PROJECT_ID = #{projectId}
        </if>
        <if test="corpId != null and corpId != ''">
            AND CORP_ID = #{corpId}
        </if>
<!--         <if test="userId != null and userId != ''"> -->
<!--             AND REG_ID = #{userId} -->
<!--         </if> -->
        <if test="startDt != null and startDt != '' and endDt != null and endDt != ''">
            AND REG_DT BETWEEN #{startDt} AND DATE_ADD(#{endDt}, INTERVAL 1 DAY)
        </if>
    </sql>

    <select id="selectUrlInfoListCnt" parameterType="hashmap" resultType="int">
    	/* urlInfo.selectUrlInfoListCnt - 단축URL 목록 카운트 */
        SELECT
            COUNT(*) AS CNT
        FROM cm_console.CM_URL_INFO A
        WHERE
        	USE_YN = 'Y'
        <include refid="whereSelectUrlInfoList"/>
    </select>

    <select id="selectUrlInfoList" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoList - 단축URL 목록 조회 */
        SELECT
            @ROWNUM := @ROWNUM - 1 AS ROWNUM,
            URL_ID,
            ORG_URL,
            CORP_ID,
            PROJECT_ID,
            TITLE,
			USE_YN,
			EXP_DT,
			REG_ID,
			REG_DT,
			UPD_ID,
			UPD_DT
        FROM
        	cm_console.CM_URL_INFO A,
        (SELECT @ROWNUM := #{totCnt} - #{offset} + 1) TMP
        WHERE
        	USE_YN = 'Y'
        <include refid="whereSelectUrlInfoList"/>
        ORDER BY
        	REG_DT DESC
        LIMIT #{offset}, #{listSize}
    </select>

    <select id="selectUrlInfoStatList" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatList - 단축URL 통계 목록 조회 */
        SELECT
			@ROWNUM := @ROWNUM - 1 AS ROWNUM,
			AA.*
		FROM (
			SELECT
	            A.URL_ID,
	            ORG_URL,
	            CORP_ID,
	            PROJECT_ID,
	            TITLE,
	            SUM(IFNULL(TOT_CNT, 0)) AS TOT_CNT,
	            SUM(IFNULL(CON_CNT, 0)) AS CON_CNT,
				USE_YN,
				EXP_DT,
				A.REG_ID,
				A.REG_DT,
				A.UPD_ID,
				A.UPD_DT
	        FROM
	        	cm_console.CM_URL_INFO A
	       	LEFT OUTER JOIN
	       		cm.CM_STAT_URL B
	       	ON
	       		A.URL_ID = B.URL_ID
	        WHERE
	        	USE_YN = 'Y'
	        <include refid="whereSelectUrlInfoList"/>
	        GROUP BY
	        	A.URL_ID
	        ORDER BY
	        	REG_DT DESC
	        LIMIT #{offset}, #{listSize}
		) AA,
		(SELECT @ROWNUM := #{totCnt} - #{offset} + 1) TMP
    </select>

    <select id="selectUrlInfoStatChart1" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatChart1 - 단축URL 통계 / 유입채널 조회 */
	    SELECT
			CH,
			SUM(TOT_CNT) TOT_CNT,
			SUM(CON_CNT) CON_CNT,
			SUM(PER) PER
		FROM (
			SELECT
				A.*,
				CASE
					WHEN TOT_CNT = 0
				THEN 0
				ELSE
					ROUND(CON_CNT / TOT_CNT, 2) * 100
				END AS PER
			FROM (
			    SELECT
					CASE
					WHEN (CH = 'SMS' OR CH = 'MMS') THEN 'SMS'
					WHEN (CH = 'ALIMTALK' OR CH = 'FRIENDTALK') THEN 'KAKAO'
					ELSE CH
					END AS CH,
			        SUM(TOT_CNT) TOT_CNT,
			        SUM(CON_CNT) CON_CNT
			    FROM
			    	cm_console.CM_URL_INFO A
			   	INNER JOIN
			   		cm.CM_STAT_URL B
			   	ON
			   		A.URL_ID = B.URL_ID
				WHERE
					A.URL_ID			= #{urlId}
	            AND PROJECT_ID 	= #{projectId}
	            AND CORP_ID 		= #{corpId}
			    GROUP BY
			    	CH
			) A
			UNION SELECT '-' AS CH, 0 AS TOT_CNT, 0 AS CON_CNT, 0 AS PER FROM DUAL
			UNION SELECT 'SMS' AS CH, 0 AS TOT_CNT, 0 AS CON_CNT, 0 AS PER FROM DUAL
			UNION SELECT 'RCS' AS CH, 0 AS TOT_CNT, 0 AS CON_CNT, 0 AS PER FROM DUAL
			UNION SELECT 'PUSH' AS CH, 0 AS TOT_CNT, 0 AS CON_CNT, 0 AS PER FROM DUAL
			UNION SELECT 'KAKAO' AS CH, 0 AS TOT_CNT, 0 AS CON_CNT, 0 AS PER FROM DUAL
		) B
		GROUP BY
			CH
		ORDER BY
			CH DESC
    </select>

    <select id="selectUrlInfoStatChart2" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatChart2 - 단축URL 통계 / 타임라인(일) 조회 */
        SELECT
			YMD,
		    IFNULL(SUM(CASE WHEN CH = 'SMS' THEN CON_CNT ELSE 0 END), 0) 		AS SMS,
		    IFNULL(SUM(CASE WHEN CH = 'RCS' THEN CON_CNT ELSE 0 END), 0) 		AS RCS,
		    IFNULL(SUM(CASE WHEN CH = 'KAKAO' THEN CON_CNT ELSE 0 END), 0) 	AS KAKAO,
		    IFNULL(SUM(CASE WHEN CH = 'PUSH' THEN CON_CNT ELSE 0 END), 0) 		AS PUSH,
		    IFNULL(SUM(CASE WHEN CH = '-' THEN CON_CNT ELSE 0 END), 0) 				AS FAIL
		FROM
			cm_console.CM_URL_INFO A
		INNER JOIN
			cm.CM_STAT_URL B
		ON
			A.URL_ID = B.URL_ID
		WHERE
			A.URL_ID 			= #{urlId}
		AND PROJECT_ID 	= #{projectId}
		AND CORP_ID 		= #{corpId}
		AND YMD BETWEEN #{startDt} AND DATE_ADD(#{endDt}, INTERVAL 1 DAY)
		GROUP BY
			YMD
		ORDER BY
			YMD
    </select>

    <select id="selectUrlInfoStatChart3" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatChart3 - 단축URL 통계 / 타임라인(시간) 조회 */
        SELECT
			HH,
		<if test="compVal == 'SUM'">
			SUM(SMS) AS SMS,
			SUM(RCS) AS RCS,
			SUM(KAKAO) AS KAKAO,
			SUM(PUSH) AS PUSH
		</if>
		<if test="compVal != 'SUM'">
			ROUND(AVG(SMS), 2) AS SMS,
			ROUND(AVG(RCS), 2) AS RCS,
			ROUND(AVG(KAKAO), 2) AS KAKAO,
			ROUND(AVG(PUSH), 2) AS PUSH
		</if>
		FROM (
			SELECT
				HH,
			<if test="compVal == 'SUM'">
			    IFNULL(SUM(CASE WHEN CH = 'SMS' THEN CON_CNT ELSE 0 END), 0) AS SMS,
			    IFNULL(SUM(CASE WHEN CH = 'RCS' THEN CON_CNT ELSE 0 END), 0) AS RCS,
			    IFNULL(SUM(CASE WHEN CH = 'KAKAO' THEN CON_CNT ELSE 0 END), 0) AS KAKAO,
			    IFNULL(SUM(CASE WHEN CH = 'PUSH' THEN CON_CNT ELSE 0 END), 0) AS PUSH
			</if>
			<if test="compVal != 'SUM'">
			    IFNULL(ROUND(AVG(CASE WHEN CH = 'SMS' THEN CON_CNT ELSE 0 END), 2), 0) AS SMS,
			    IFNULL(ROUND(AVG(CASE WHEN CH = 'RCS' THEN CON_CNT ELSE 0 END), 2), 0) AS RCS,
			    IFNULL(ROUND(AVG(CASE WHEN CH = 'KAKAO' THEN CON_CNT ELSE 0 END), 2), 0) AS KAKAO,
			    IFNULL(ROUND(AVG(CASE WHEN CH = 'PUSH' THEN CON_CNT ELSE 0 END), 2), 0) AS PUSH
			</if>
			FROM
				cm_console.CM_URL_INFO A
			INNER JOIN
				cm.CM_STAT_URL_HH B
			ON
				A.URL_ID = B.URL_ID
			WHERE
				A.URL_ID 			= #{urlId}
			AND PROJECT_ID 	= #{projectId}
			AND CORP_ID 		= #{corpId}
			AND YMD BETWEEN #{startDt} AND DATE_ADD(#{endDt}, INTERVAL 1 DAY)
			GROUP BY
				HH
			UNION SELECT '00' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '01' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '02' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '03' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '04' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '05' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '06' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '07' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '08' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '09' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '10' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '11' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '12' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '13' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '14' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '15' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '16' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '17' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '18' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '19' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '20' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '21' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '22' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
			UNION SELECT '23' AS HH, 0 AS SMS, 0 AS RCS, 0 AS KAKAO, 0 AS PUSH FROM DUAL
		) A
		GROUP BY
			HH
		ORDER BY
			HH
    </select>

    <select id="selectClickRecvListCnt" parameterType="hashmap" resultType="int">
    	/* urlInfo.selectClickRecvListCnt - 단축URL 통계 / 클릭 수신자 카운트 */
        SELECT
            COUNT(*) AS CNT
        FROM
			cm.CM_URL_MSG A
		INNER JOIN
			cm.CM_MSG B
		ON
			A.MSG_KEY = B.MSG_KEY
        WHERE
			A.URL_ID = #{urlId}
		<if test="recvTelNo != null and recvTelNo != ''">
		AND B.PHONE = #{recvTelNo}
        </if>
		<if test="showClickOnlyYn != null and showClickOnlyYn eq 'Y'.toString()">
		AND A.CON_DT IS NOT NULL
        </if>
    </select>

    <select id="selectClickRecvList" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectClickRecvList - 단축URL 통계 / 클릭 수신자 목록 */
    	SELECT
			@ROWNUM := @ROWNUM - 1 AS ROWNUM,
			AA.*
		FROM (
	    	SELECT
	    		B.PHONE,
				DATE_FORMAT(A.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT,
				B.FINAL_CH,
				DATE_FORMAT(A.CON_DT, '%Y-%m-%d %H:%i:%s') AS CON_DT,
				A.IS_MOBILE
			FROM
				cm.CM_URL_MSG A
			INNER JOIN
				cm.CM_MSG B
			ON
				A.MSG_KEY = B.MSG_KEY
			WHERE
				A.URL_ID = #{urlId}
			<if test="recvTelNo != null and recvTelNo != ''">
			AND B.PHONE = #{recvTelNo}
	        </if>
			<if test="showClickOnlyYn != null and showClickOnlyYn eq 'Y'.toString()">
			AND A.CON_DT IS NOT NULL
	        </if>
	        ORDER BY
	        	REG_DT DESC
	        LIMIT #{offset}, #{listSize}
		) AA,
		(SELECT @ROWNUM := #{totCnt} - #{offset} + 1) TMP
    </select>

	<insert id="insertUrlInfo">
		/* urlInfo.insertUrlInfo - 단축URL 생성 */
		INSERT INTO cm_console.CM_URL_INFO (
			URL_ID,
            ORG_URL,
            CORP_ID,
            PROJECT_ID,
            TITLE,
			USE_YN,
			EXP_DT,
			REG_ID,
			REG_DT
		) VALUES (
			#{urlId},
			#{orgUrl},
			#{corpId},
			#{projectId},
			#{title},
			'Y',
			#{expDt},
			#{userId},
			NOW()
		)
	</insert>

	<delete id="deleteUrlInfo" parameterType="hashmap">
		/* urlInfo.deleteUrlInfo - 단축URL 삭제 */
		UPDATE
			cm_console.CM_URL_INFO
		SET
			USE_YN 	= 'N',
			UPD_ID 	= #{userId},
			UPD_DT 	= NOW()
		WHERE
			URL_ID 		= #{urlId}
	</delete>

	<select id="excelDownUrlInfoStatList" parameterType="hashmap" resultType="camel">
    	/* urlInfo.excelDownUrlInfoStatList - 단축URL 통계 목록 엑셀 다운로드 */
    	SELECT
    		A.*,
    		CASE
    			WHEN TOT_CNT = 0
    		THEN 0
    		ELSE
    			ROUND(CON_CNT / TOT_CNT, 2) * 100
    		END AS PER
    	FROM (
			SELECT
	            A.URL_ID,
	            ORG_URL,
	            CORP_ID,
	            PROJECT_ID,
	            TITLE,
	            SUM(IFNULL(TOT_CNT, 0)) AS TOT_CNT,
	            SUM(IFNULL(CON_CNT, 0)) AS CON_CNT,
				USE_YN,
				DATE_FORMAT(EXP_DT, '%Y-%m-%d %H:%i:%s') AS EXP_DT,
				A.REG_ID,
				DATE_FORMAT(A.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT,
				A.UPD_ID,
				DATE_FORMAT(A.UPD_DT, '%Y-%m-%d %H:%i:%s') AS UPD_DT
	        FROM
	        	cm_console.CM_URL_INFO A
	       	LEFT OUTER JOIN
	       		cm.CM_STAT_URL B
	       	ON
	       		A.URL_ID = B.URL_ID
	        WHERE
	        	USE_YN = 'Y'
	        <include refid="whereSelectUrlInfoList"/>
	        GROUP BY
	        	A.URL_ID
	        ORDER BY
	        	REG_DT DESC
		) A
    </select>

    <select id="excelDownClickRecvList" parameterType="hashmap" resultType="camel">
    	/* urlInfo.excelDownClickRecvList - 단축클릭수신자 엑셀 다운로드 */
    	SELECT
    		B.PHONE,
			DATE_FORMAT(A.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT,
			B.FINAL_CH,
			DATE_FORMAT(A.CON_DT, '%Y-%m-%d %H:%i:%s') AS CON_DT,
			A.IS_MOBILE
		FROM
			cm.CM_URL_MSG A
		INNER JOIN
			cm.CM_MSG B
		ON
			A.MSG_KEY = B.MSG_KEY
		WHERE
			A.URL_ID = #{urlId}
		<if test="recvTelNo != null and recvTelNo != ''">
		AND B.PHONE = #{recvTelNo}
        </if>
		<if test="showClickOnlyYn != null and showClickOnlyYn eq 'Y'.toString()">
		AND A.CON_DT IS NOT NULL
        </if>
        ORDER BY
        	REG_DT DESC
    </select>
</mapper>
