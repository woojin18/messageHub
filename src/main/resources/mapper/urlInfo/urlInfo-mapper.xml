<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="urlInfo">

    <sql id ="whereSelectUrlInfoList">
        <if test="title != null and title != ''">
            AND TITLE LIKE CONCAT('%', #{title}, '%')
        </if>
        <if test="urlId != null and urlId != ''">
            AND URL_ID = #{urlId}
        </if>
        <if test="orgUrl != null and orgUrl != ''">
            AND ORG_URL LIKE CONCAT('%', #{orgUrl}, '%')
        </if>
        <if test="projectId != null and projectId != ''">
            AND PROJECT_ID = #{projectId}
        </if>
        <if test="corpId != null and corpId != ''">
            AND CORP_ID = #{corpId}
        </if>
<!--         <if test="userId != null and userId != ''"> -->
<!--             AND REG_ID = #{userId} -->
<!--         </if> -->
        <if test="startDt != null and startDt != '' and endDt != null and endDt != ''">
            AND REG_DT BETWEEN #{startDt} AND #{endDt}
        </if>
    </sql>

    <select id="selectUrlInfoListCnt" parameterType="hashmap" resultType="int">
    	/* urlInfo.selectUrlInfoListCnt - 단축URL 목록 카운트 */
        SELECT
            COUNT(*) AS CNT
        FROM cm_console.CM_URL_INFO
        WHERE
        	USE_YN = 'Y'
        <include refid="whereSelectUrlInfoList"/>
    </select>

    <select id="selectUrlInfoList" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoList - 단축URL 목록 조회 */
        SELECT
            @ROWNUM := @ROWNUM - 1 AS ROWNUM,
            URL_ID,
            ORG_URL,
            CORP_ID,
            PROJECT_ID,
            TITLE,
			USE_YN,
			EXP_DT,
			REG_ID,
			REG_DT,
			UPD_ID,
			UPD_DT
        FROM
        	cm_console.CM_URL_INFO,
        (SELECT @ROWNUM := #{totCnt} - #{offset} + 1) TMP
        WHERE
        	USE_YN = 'Y'
        <include refid="whereSelectUrlInfoList"/>
        ORDER BY
        	REG_DT DESC
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
    </select>

    <select id="selectUrlInfoStatList" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatList - 단축URL 통계 목록 조회 */
        SELECT
			@ROWNUM := @ROWNUM - 1 AS ROWNUM,
			AA.*
		FROM (
			SELECT
	            A.URL_ID,
	            ORG_URL,
	            CORP_ID,
	            PROJECT_ID,
	            TITLE,
	            IFNULL(SUM(TOT_CNT), 0) AS TOT_CNT,
	            IFNULL(SUM(CON_CNT), 0) AS CON_CNT,
				USE_YN,
				EXP_DT,
				A.REG_ID,
				A.REG_DT,
				A.UPD_ID,
				A.UPD_DT
	        FROM
	        	cm_console.CM_URL_INFO A
	       	LEFT OUTER JOIN
	       		cm.CM_STAT_URL B
	       	ON
	       		A.URL_ID = B.URL_ID
	        WHERE
	        	USE_YN = 'Y'
	        <include refid="whereSelectUrlInfoList"/>
	        ORDER BY
	        	REG_DT DESC
	        LIMIT #{offset}, #{listSize}
		) AA,
		(SELECT @ROWNUM := #{totCnt} - #{offset} + 1) TMP
    </select>


    <select id="selectUrlInfoStatChart1" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatChart1 - 단축URL 통계 / 유입채널 조회 */
        SELECT
			CH,
            SUM(TOT_CNT) AS TOT_CNT,
            SUM(CON_CNT) AS CON_CNT,
            ROUND(SUM(CON_CNT) / SUM(TOT_CNT), 2) * 100 AS PER
        FROM cm.CM_STAT_URL B
        WHERE
        	URL_ID = #{urlId}
        GROUP BY
        	CH
    </select>

    <select id="selectUrlInfoStatChart2" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatChart2 - 단축URL 통계 / 타임라인(일) 조회 */
        SELECT
			CH,
			YMD,
		    TOT_CNT,
		    CON_CNT
		FROM (
			SELECT
				CH,
				@ROWNUM := @ROWNUM + 1 AS ORD,
				YMD,
	            SUM(TOT_CNT) AS TOT_CNT,
	            SUM(CON_CNT) AS CON_CNT
	        FROM cm.CM_STAT_URL B,
	        (SELECT @ROWNUM:=0) TMP
	        WHERE
	        	URL_ID = #{urlId}
	        AND YMD BETWEEN #{startDt} AND #{endDt}
	        GROUP BY
	        	CH,
	        	YMD
			UNION ALL
			SELECT
				'ALL' CH,
				9999 AS ORD,
				YMD,
	            SUM(TOT_CNT) AS TOT_CNT,
	            SUM(CON_CNT) AS CON_CNT
	        FROM cm.CM_STAT_URL B
	        WHERE
	        	URL_ID = #{urlId}
          	AND YMD BETWEEN #{startDt} AND #{endDt}
	        GROUP BY
	        	YMD
		) A
		ORDER BY
			YMD,
			ORD DESC
    </select>

    <select id="selectUrlInfoStatChart3" parameterType="hashmap" resultType="camel">
    	/* urlInfo.selectUrlInfoStatChart3 - 단축URL 통계 / 타임라인(시간) 조회 */
        SELECT
			CH,
			HOUR,
		    TOT_CNT,
		    CON_CNT
		FROM (
			SELECT
				CH,
				@ROWNUM := @ROWNUM + 1 AS ORD,
				HOUR(YMD) HOUR,
			<if test="compVal == 'SUM'">
	            SUM(TOT_CNT) AS TOT_CNT,
	            SUM(CON_CNT) AS CON_CNT
			</if>
			<if test="compVal != 'SUM'">
	            ROUND(AVG((TOT_CNT), 2) AS TOT_CNT,
	            ROUND(AVG((CON_CNT), 2) AS CON_CNT
			</if>
	        FROM CM.CM_STAT_URL B,
	        (SELECT @ROWNUM:=0) TMP
	        WHERE
	        	URL_ID = #{urlId}
	        AND YMD BETWEEN #{startDt} AND #{endDt}
	        GROUP BY
	        	CH,
	        	HOUR
			UNION ALL
			SELECT
				'ALL' CH,
				9999 AS ORD,
				HOUR(YMD) HOUR,
			<if test="compVal == 'SUM'">
	            SUM(TOT_CNT) AS TOT_CNT,
	            SUM(CON_CNT) AS CON_CNT
			</if>
			<if test="compVal != 'SUM'">
	            ROUND(AVG((TOT_CNT), 2) AS TOT_CNT,
	            ROUND(AVG((CON_CNT), 2) AS CON_CNT
			</if>
	        FROM CM.CM_STAT_URL B
	        WHERE
				URL_ID = #{urlId}
            AND YMD BETWEEN #{startDt} AND #{endDt}
	        GROUP BY
	        	HOUR
		) A
		ORDER BY
			HOUR,
			ORD DESC
    </select>

	<insert id="insertUrlInfo">
		/* urlInfo.insertUrlInfo - 단축URL 생성 */
		INSERT INTO cm_console.CM_URL_INFO (
			URL_ID,
            ORG_URL,
            CORP_ID,
            PROJECT_ID,
            TITLE,
			USE_YN,
			EXP_DT,
			REG_ID,
			REG_DT
		) VALUES (
			#{urlId},
			#{orgUrl},
			#{corpId},
			#{projectId},
			#{title},
			'Y',
			#{expDt},
			#{userId},
			NOW()
		)
	</insert>

	<delete id="deleteUrlInfo" parameterType="hashmap">
		/* urlInfo.deleteUrlInfo - 단축URL 삭제 */
		UPDATE
			cm_console.CM_URL_INFO
		SET
			USE_YN 	= 'N',
			UPD_ID 	= #{userId},
			UPD_DT 	= NOW()
		WHERE
			URL_ID 		= #{urlId}
	</delete>
</mapper>
