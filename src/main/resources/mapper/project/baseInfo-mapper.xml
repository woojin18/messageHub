<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="baseInfo">
		<select id="selectProjectBaseInfo" resultType="camel">
		/* baseInfo.selectProjectBaseInfo */
		SELECT	A.PROJECT_ID
		,		A.CORP_ID
		,		A.PROJECT_NAME
		,		A.PROJECT_DESC
		,		A.PAY_TYPE
		,		A.NOPAY_YN
		,		CASE
					WHEN A.NOPAY_YN = 'Y' THEN '무과금'
					ELSE
						CASE
							WHEN A.PAY_TYPE = 'PRE' THEN '선불'
							WHEN A.PAY_TYPE = 'POST' THEN '후불'
							ELSE ''
						END
				END AS PAY_TYPE_NAME
		,		A.BILL_ID
		,		A.SMART_CH_CODE
		,		DATE_FORMAT(A.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT
		,		A.UPD_DT
		,		A.USE_YN
		,		A.USE_CH_GRP_INFO
		,		A.RESEND_TITLE
		,		A.NOPAY_YN
		,		A.SUBBILL_YN
		,		DATE_FORMAT(A.SUBBILL_START_DAY, '%Y-%m-%d') as SUBBILL_START_DAY
		,		( SELECT COUNT(USER_ID) + 1 FROM cm_console.CM_PROJECT_USER WHERE PROJECT_ID = A.PROJECT_ID ) AS PROJECT_MEMBER_CNT
		,		A.NIGHT_SEND_YN
		FROM	cm_console.CM_PROJECT A
		WHERE	A.PROJECT_ID	= #{projectId}
		AND		A.CORP_ID		= #{corpId}
	</select>

	<update id="updateProjectBaseInfo">
		/* baseInfo.updateProjectBaseInfo */
		UPDATE	cm_console.CM_PROJECT
		SET		PROJECT_NAME		= #{projectName}
		,		PROJECT_DESC		= #{projectDesc}
		,		USE_YN				= #{useYn}
		,		USE_CH_GRP_INFO		= #{jsonInfo}
		,		NIGHT_SEND_YN		= #{nightSendYN}
		,		UPD_ID				= #{userId}
		,		UPD_DT				= NOW()
		WHERE	PROJECT_ID			= #{projectId}
	</update>
	
	<select id="selectApiKeyList" resultType="camel">
		/* baseInfo.selectApiKeyList */
		SELECT	API_KEY
		,		CORP_ID
		,		PROJECT_ID
		,		API_PWD
		,		IP_CHK_YN
		,		CPS
		,		DAY_SENDER_CHK_YN
		,		MON_SENDER_CHK_YN
		,		API_KEY_NAME
		,		STATUS
		,		RPT_YN
		,		LINE_TYPE
		,		DUP_CHK_YN
		,		WEB_SENDER_YN
		,		IF(WEB_SENDER_YN = 'Y', '예', '아니오') AS WEB_SENDER_YN_NAME
		,		DATE_FORMAT(REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT
		,		DAY_SENDER_LIMIT_AMOUNT
		,		MON_SENDER_LIMIT_AMOUNT
		,		IP_LIST
		,		DATE_FORMAT(UPD_DT, '%Y-%m-%d') AS UPD_DT
		,		CASE STATUS
				WHEN 'USE' THEN '사용' ELSE '미사용'
				END			STATUS_NAME
		FROM cm.CM_APIKEY
		WHERE CORP_ID = #{corpId}
		AND PROJECT_ID = #{projectId}
	</select>

	<insert id="insertApiKey">
		/* baseInfo.insertApiKey APIKEY 등록 */
		INSERT INTO	cm.CM_APIKEY (
				API_KEY
		,		CORP_ID
		,		PROJECT_ID
		,		API_PWD
		,		IP_CHK_YN
		,		CPS
		,		DAY_SENDER_CHK_YN
		,		MON_SENDER_CHK_YN
		,		API_KEY_NAME
		,		STATUS
		,		RPT_YN
		,		LINE_TYPE
		,		DUP_CHK_YN
		,		WEB_SENDER_YN
		,		REG_DT
				<if test="daySenderLimitAmount != null and daySenderLimitAmount != ''">
		,		DAY_SENDER_LIMIT_AMOUNT
				</if>
				<if test="monSenderLimitAmount != null and monSenderLimitAmount != ''">
		,		MON_SENDER_LIMIT_AMOUNT
				</if>
		,		IP_LIST
		,		UPD_DT
		)	VALUES (
				#{apiKey}
		,		#{corpId}
		,		#{newProjectId}
		,		#{apiPwd}
		,		#{ipChkYn}
		,		100
		,		#{daySenderChkYn}
		,		#{monSenderChkYn}
		,		#{apiKeyName}
		,		#{status}
		,		#{rptYn}
		,		'NORMAL'
		,		#{dupChkYn}
		,		#{webSenderYn}
		,		NOW()
				<if test="daySenderLimitAmount != null and daySenderLimitAmount != ''">
		,		#{daySenderLimitAmount}
				</if>
				<if test="monSenderLimitAmount != null and monSenderLimitAmount != ''">
		,		#{monSenderLimitAmount}
				</if>
		,		#{jsonInfo}
		,		NOW()
		)
	</insert>
	
	<update id="updateApiKey" parameterType="hashmap">
		/* baseInfo.updateApiKey APIKEY 수정*/
		UPDATE cm.CM_APIKEY
		SET
			API_PWD					= #{apiPwd} 
		,	WEB_SENDER_YN			= #{webSenderYn}
		,	IP_CHK_YN				= #{ipChkYn}
		,	IP_LIST					= #{jsonInfo}
		,	STATUS					= #{status}
		,	RPT_YN					= #{rptYn}
		,	DUP_CHK_YN				= #{dupChkYn}
		,	DAY_SENDER_CHK_YN		= #{daySenderChkYn}
		<if test="daySenderLimitAmount != null and daySenderLimitAmount != ''">
		,	DAY_SENDER_LIMIT_AMOUNT	= #{daySenderLimitAmount}
		</if>
		,	MON_SENDER_CHK_YN		= #{monSenderChkYn}
		<if test="monSenderLimitAmount != null and monSenderLimitAmount != ''">
		,	MON_SENDER_LIMIT_AMOUNT	= #{monSenderLimitAmount}
		</if>
		,	API_KEY_NAME			= #{apiKeyName}
		,	UPD_DT					= NOW()
		WHERE
			API_KEY					= #{apiKey}
	</update>
	
	<update id="updateApiKeyWebSender" parameterType="hashmap">
		/* baseInfo.updateApiKey APIKEY 수정(웹 사용 Y) */
		UPDATE	cm.CM_APIKEY
		SET		DAY_SENDER_CHK_YN		= #{daySenderChkYn}
		<if test="daySenderLimitAmount != null and daySenderLimitAmount != ''">
		,		DAY_SENDER_LIMIT_AMOUNT	= #{daySenderLimitAmount}
		</if>
		,		MON_SENDER_CHK_YN		= #{monSenderChkYn}
		<if test="monSenderLimitAmount != null and monSenderLimitAmount != ''">
		,		MON_SENDER_LIMIT_AMOUNT	= #{monSenderLimitAmount}
		</if>
		,		UPD_DT					= NOW()
		WHERE	API_KEY					= #{apiKey}
	</update>
	
	<select id="selectApiKeyPassword" resultType="int">
	/* baseInfo.selectApiKeyPassword APIKEY 암호 검증*/
		SELECT	COUNT(1)
		FROM	cm.CM_APIKEY
		WHERE	API_PWD = #{apiPwd}
		AND		API_KEY = #{apiKey}
	</select>
	
	<select id="selectProjectUseCnt" resultType="int">
		/* baseInfo.selectProjectUseCnt 프로젝트 사용 여부 체크*/
		SELECT	COUNT(*)
		FROM	cm_console.CM_WEB_MSG
		WHERE	PROJECT_ID = #{projectId}
	</select>
	
	<select id="selectProjectNightSendYn" resultType="String">
		/* baseInfo.selectProjectNightSendYn*/
		SELECT A.NIGHT_SEND_YN
		FROM	cm_console.CM_PROJECT A
		WHERE	A.PROJECT_ID	= #{projectId}
		AND		A.CORP_ID		= #{corpId}
	</select>
	
	<select id="selectApikeyManageList" resultType="camel">
		/* baseInfo.selectApikeyManageList*/
				SELECT	API_KEY
		,		API_KEY_NAME 
		,		FORMAT(CPS, 0) AS TPS
		,		CASE LINE_TYPE 
					WHEN 'NORMAL'
					THEN '일반'
					WHEN 'BATCH'
					THEN '배치'
					WHEN 'DUMMY'
					THEN '더미'
					WHEN 'REAL'
					THEN '실시간'
				END AS LINE_TYPE 
		,		CASE STATUS
					WHEN 'USE' 
					THEN '사용' 
					ELSE '미사용'
				END	STATUS
		,		DATE_FORMAT(REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT
		,		CASE IP_CHK_YN
					WHEN 'Y'
					THEN '사용'
					WHEN 'N'
					THEN '미사용'
				END AS IP_CHK_YN
		,		IP_LIST 
		,		CASE STATUS 
					WHEN 'USE'
					THEN '사용'
					WHEN 'CANCEL'
					THEN '미사용'
				END AS STATUS
		,		CASE RPT_YN 
					WHEN 'Y'
					THEN '사용'
					WHEN 'N'
					THEN '미사용'
				END AS RPT_YN
		,		CASE DUP_CHK_YN 
					WHEN 'Y'
					THEN '사용'
					WHEN 'N'
					THEN '미사용'
				END AS DUP_CHK_YN	
		,		CASE WEB_SENDER_YN 
					WHEN 'Y'
					THEN '사용'
					WHEN 'N'
					THEN '미사용'
				END AS WEB_SENDER_YN
		,		API_PWD	
		FROM cm.CM_APIKEY
		WHERE CORP_ID = #{corpId}
		AND PROJECT_ID = #{projectId}
		<if test="apiKey != null and apiKey != ''">
		AND API_KEY = #{apiKey}	
		</if>
		ORDER BY REG_DT DESC
	</select>
	
	<insert id="insertApikeyManage">
	/* baseInfo.insertApikeyManage*/
			INSERT INTO	cm.CM_APIKEY (
			API_KEY 
		,		CORP_ID 
		,		PROJECT_ID 
		,		API_KEY_NAME 
		,		API_PWD 
		,		CPS 
		,		LINE_TYPE 
		,		IP_CHK_YN 
		<if test='ipChkYn == "Y"'>
		,		IP_LIST 
		</if>
		,		STATUS 
		,		RPT_YN 
		,		DUP_CHK_YN
		,		REG_DT 
		,		WEB_SENDER_YN
		)VALUES(
				#{apikey}
		,		#{corpId}
		,		#{projectId}
		,		#{apikeyName}
		,		#{apikeyPwd}
		,		#{tps}
		,		'NORMAL'
		,		#{ipChkYn}
		<if test='ipChkYn == "Y"'>
		,		#{ipList} 
		</if>	
		,		#{status}
		,		#{rptYn}
		,		#{dupChkYn}
		,		NOW()
		,		'N'
		)	
	</insert>
	
	<update id="updateCmdApikey">
		/* baseInfo.updateCmdApikey*/
		UPDATE cm.CM_CMD SET
		UPD_DT = NOW()
		WHERE CMD_TGT ='CM_APIKEY'
	</update>

	<update id="updateApikeyManage">
		/* baseInfo.updateApikeyManage*/
		UPDATE cm.CM_APIKEY SET  
		<if test='pwdChk == "Y"'>
				API_PWD =#{apiNewPwd}
		,		
		</if>	
				API_KEY_NAME = #{apiKeyName}	
		,		CPS = #{cps}
		<if test='pwdChk == "Y"'>
				API_PWD =#{apiNewPwd}
		,		
		</if>
		,		IP_CHK_YN = #{ipChkYn}
		<if test='ipChkYn == "Y"'>
		, 		IP_LIST = #{ipList}
		</if>	
		,		STATUS = #{status}
		,		RPT_YN = #{rptYn}
		,		DUP_CHK_YN = #{dupChkYn}
		,		UPD_DT = NOW()
		WHERE API_KEY =#{apikey}
	</update>

	<delete id="deleteApiKeyManage">
		DELETE FROM cm.CM_APIKEY 
		WHERE API_KEY = #{apiKey} 
	</delete>
</mapper>