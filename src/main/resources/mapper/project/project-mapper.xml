<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project">

	<select id="selectProjectList" resultType="HashMap">
		/* project.selectProjectList */
		SELECT	A.PROJECT_ID
		,		A.CORP_ID
		,		A.PROJECT_NAME
		,		A.PAY_TYPE
		,		CASE 
					WHEN A.PAY_TYPE = 'Y' THEN '선불'
					WHEN A.PAY_TYPE = 'N' THEN '후불'
					ELSE ''
				END AS PAY_TYPE_NAME
		,		A.BILL_ID
		,		A.SMART_CH_CODE
		,		A.PRICE_INFO
		,		A.SUBBILL_YN
		,		A.SUBBILL_START_DAY
		,		date_format(A.REG_DT, '%Y-%m-%d') AS REG_DT
		,		A.UPD_DT
		,		A.ALARM_USE_YN
		,		A.ALARM_REQ_DT
		,		A.ALARM_AMOUNT
		,		A.USE_YN
		,		A.USE_CH_GRP_INFO
		,		A.NOPAY_YN
		,		( SELECT COUNT(USER_ID) FROM cm_console.CM_PROJECT_USER WHERE PROJECT_ID = A.PROJECT_ID ) AS PROJECT_MEMBER_CNT
		,		REPLACE(JSON_EXTRACT(PRICE_INFO, '$.RCS[0]'), "\"", "") AS RCS_YN
		,		REPLACE(JSON_EXTRACT(PRICE_INFO, '$.PUSH[0]'), "\"", "") AS PUSH_YN
		,		REPLACE(JSON_EXTRACT(PRICE_INFO, '$.KAKAO[0]'), "\"", "") AS KAKAO_YN
		,		REPLACE(JSON_EXTRACT(PRICE_INFO, '$.MO[0]'), "\"", "") AS MO_YN
		,		CONCAT(	CASE WHEN JSON_EXTRACT(PRICE_INFO, '$.MO[0]') = 'Y' THEN 'MO,' ELSE '' END
					,	CASE WHEN JSON_EXTRACT(PRICE_INFO, '$.RCS[0]') = 'Y' THEN 'RCS,' ELSE '' END
					,	CASE WHEN JSON_EXTRACT(PRICE_INFO, '$.PUSH[0]') = 'Y' THEN 'PUSH,' ELSE '' END
					,	CASE WHEN JSON_EXTRACT(PRICE_INFO, '$.KAKAO[0]') = 'Y' THEN 'KAKAO' ELSE '' END
				) AS USE_CH
		FROM	cm_console.CM_PROJECT A
		WHERE	1=1
		AND		A.DEL_YN != 'Y'
		<if test="src_project_name != '' and src_project_name != null ">
		AND A.PROJECT_NAME LIKE CONCAT('%', #{src_project_name}, '%')
		</if>
		<if test="src_use_yn != '' and src_use_yn != null ">
		AND A.USE_YN = #{src_use_yn}
		</if>
		ORDER BY PROJECT_ID DESC
		LIMIT ${rowsFront}, #{rowsEnd}
	</select>
	
	<select id="checkProjectNameDuplicate" resultType="int">
		/* project.checkProjectNameDuplicate */
		SELECT	COUNT(PROJECT_ID) AS CNT
		FROM	cm_console.CM_PROJECT
		WHERE	PROJECT_NAME = #{check_project_name}
	</select>
	
	<select id="selectProjectMaxId" resultType="int">
		/* project.selectProjectMaxId */
		SELECT	MAX(PROJECT_ID) + 1 AS project_max_id
		FROM	cm_console.CM_PROJECT
	</select>
	
	<insert id="insertProject">
		/* project.insertProject */
		INSERT cm_console.CM_PROJECT
		(
			PROJECT_ID
		,	CORP_ID
		,	PROJECT_NAME
		,	PROJECT_DESC
		,	PAY_TYPE
		,	BILL_ID
		,	SMART_CH_CODE
		,	PRICE_INFO
		,	SUBBILL_YN
		,	REG_DT
		,	USE_YN
		,	DEL_YN
		)
		VALUES
		(
			#{project_id}
		,	#{corp_id}
		,	#{project_name}
		,	#{project_desc}
		,	#{pay_type}
		,	'B12345'
		,	''
		,	#{price_info}
		,	''
		,	NOW()
		,	#{use_yn}
		,	'N'
		)
	</insert>
	
	<update id="updateProject">
		/* project.updateProject */
		UPDATE	cm_console.CM_PROJECT
		SET		USE_YN = #{use_yn}
		WHERE	PROJECT_ID = #{project_id}
	</update>
	
	<update id="updateProjectBillId">
		/* project.updateProjectBillId */
		UPDATE	cm_console.CM_PROJECT
		SET		BILL_ID = #{bill_id}
		WHERE	PROJECT_ID = #{project_id}
	</update>
	
	<select id="selectProjectOwnerUser" resultType="hashMap">
		/* project.selectProjectOwnerUser */
		SELECT * 
		FROM cm_console.CM_CORP CC
		INNER JOIN cm_console.CM_USER CU 
			ON CC.CORP_ID  = CU.CORP_ID 
		INNER JOIN cm_bo.CM_USER_ROLE CUR 
			ON CU.USER_ID  = CUR.USER_ID 
		WHERE	CC.CORP_ID = #{corp_id}
		AND		CUR.ROLE_CD = 'OWNER'
	</select>
	
	<insert id="insertProjectUser">
		/* project.insertProjectUser */
		INSERT	cm_console.CM_PROJECT_USER
		(
			PROJECT_ID
		,	CORP_ID
		,	USER_ID
		,	REG_ID
		,	REG_DT
		)
		VALUES
		(
			#{project_id}
		,	#{corp_id}
		,	#{user_id}
		,	#{user_id}
		,	NOW()
		)
	</insert>
	
	<select id="selectApikeyMaxId" resultType="int">
		/* project.selectApikeyMaxId */
		SELECT	IFNULL(MAX(API_KEY),0) + 1 AS api_max_id
		FROM	cm.CM_APIKEY
	</select>
	
	<insert id="insertProjectApiKey">
		/* project.insertProjectApiKey */
		INSERT	cm.CM_APIKEY
		(
			API_KEY
		,	CORP_ID
		,	PROJECT_ID
		)
		VALUES
		(
			#{api_key}
		,	#{corp_id}
		,	#{project_id}
		)
	</insert>
	
	<select id="selectProjectUseCnt" resultType="int">
		/* project.selectProjectUseCnt */
		SELECT
		(
			SELECT	COUNT(MSG_KEY) AS CNT
			FROM	cm.CM_MSG
			WHERE	PROJECT_ID = #{project_id}
		) + (
			SELECT	COUNT(WEB_REQ_ID) AS CNT
			FROM	cm_console.CM_WEB_MSG
			WHERE	PROJECT_ID = #{project_id}
		) AS CNT
	</select>
	
	<delete id="deleteProject">
		/* project.deleteProject */
		UPDATE	cm_console.CM_PROJECT
		SET		DEL_YN = 'Y'
		WHERE	PROJECT_ID = #{project_id}
	</delete>
	
	<delete id="deleteProjectUser">
		/* project.deleteProjectUser */
		DELETE FROM cm_console.CM_PROJECT_USER
		WHERE	PROJECT_ID = #{project_id}
	</delete>
	
	<delete id="deleteProjectApiKey">
		/* project.deleteProjectApiKey */
		DELETE FROM cm.CM_APIKEY
		WHERE	PROJECT_ID = #{project_id}
	</delete>
	
	<select id="checkPreRegYn" resultType="string">
		/* project.checkPreRegYn */
		SELECT	CASE WHEN COUNT(CORP_ID) > 0 THEN 'Y' ELSE 'N' END AS PRE_REG_YN
		FROM	cm_console.CM_SPECIAL_BUSI CSB 
		WHERE	CORP_ID  = #{corpId}
	</select>
	
	<insert id="insertSpecualBusi">
		/* project.insertSpecualBusi */
		INSERT	CM_SPECIAL_BUSI
		(
			CORP_ID
		,	REQ_TYPE
		,	APPROVAL_STATUS
		,	ATTACH_FILE_LIST
		,	REG_ID
		,	REG_DT
		)
		VALUES
		(
			#{corpId}
		,	#{reqType}
		,	'REQ'
		,	#{attachFileList}
		,	#{loginId}
		,	now()
		)
	</insert>
	
</mapper>