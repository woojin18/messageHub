<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sendMessage">

    <select id="selectAppIdList" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectAppIdList APP ID 리스트 조회 */
        SELECT APLN_ID
        FROM CM_PUSH_SET
        WHERE 1=1
            AND CORP_ID = #{corpId}
            AND PROJECT_ID IN ('ALL', #{projectId})
    </select>

    <select id="selectCallbackList" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectCallbackList 발신번호 조회 */
        SELECT CHATBOT_ID AS CALLBACK /* 챗봇(대화방)ID, A2P의 경우 발신번호(mdn)과 동일 */
        FROM cm.CM_RCS_BRAND CRB
        INNER JOIN cm.CM_RCS_CHATBOT CRC
            ON CRB.BRAND_ID = CRC.BRAND_ID
            AND LOWER(CRC.SVC_TYPE) = 'a2p'
            AND CRC.USE_YN = 'Y'
            AND CRC.APPROVAL_STATUS = #{approvalStatus}
        WHERE CRB.APPROVAL_DT IS NOT NULL
            AND CRB.CORP_ID = #{corpId}
            AND CRB.PROJECT_ID IN ('ALL', #{projectId})
    </select>

    <select id="selectAddrGrpList" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectAddrGrpList 주소록 그룹 목록 조회 */
        SELECT
            CACG.ADDRESS_CATEGORY_GRP_ID
            , NULL AS ADDRESS_CATEGORY_ID
            , 0 AS GRP_DIS_ORDER
            , NULL AS DIS_ORDER
            <!-- , CACG.ADDRESS_CATEGORY_GRP_NAME AS ADDRESS_NAME -->
            , CACG.ADDRESS_CATEGORY_GRP_NAME
            , NULL AS PAR_ADDRESS_CATEGORY_ID
            , CASE
                WHEN PROJECT_ID = 'ALL' THEN '공용'
                ELSE (SELECT X.PROJECT_NAME FROM CM_PROJECT X WHERE X.PROJECT_ID = CACG.PROJECT_ID)
            END AS PROJECT_NAME
        FROM CM_ADDR_CATE_GRP CACG
        WHERE CACG.USE_YN = 'Y'
            AND CACG.CORP_ID = #{corpId}
            AND CACG.PROJECT_ID IN ('ALL', #{projectId})
    </select>

    <select id="selectAddrCtgyList" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectAddrCtgyList 주소록 카테고리 목록 조회 */
        SELECT
            CAC.ADDRESS_CATEGORY_ID
            , CAC.ADDRESS_CATEGORY_GRP_ID
            , NULL AS GRP_DIS_ORDER
            , CAC.DIS_ORDER
            , CAC.ADDRESS_CATEGORY_NAME  AS ADDRESS_NAME
            , CAC.PAR_ADDRESS_CATEGORY_ID
        FROM CM_ADDR_CATE_GRP CACG
        <if test="searchText != '' and searchText != null ">
        INNER JOIN (
            SELECT @ids := GROUP_CONCAT(DISTINCT XCACM.ADDRESS_CATEGORY_ID)
            FROM CM_ADDR_CATE_MEM XCACM
            INNER JOIN CM_CU_INFO XCCI
                ON XCACM.CU_INFO_ID = XCCI.CU_INFO_ID
                AND XCCI.USE_YN = 'Y'
            WHERE 1=1
                <if test="searchTextType == 'cuid' ">
                    AND XCCI.CUID LIKE CONCAT('%', #{searchText}, '%')
                </if>
                <if test="searchTextType == 'cuName' ">
                    AND XCCI.CU_NAME LIKE CONCAT('%', #{searchText}, '%')
                </if>
                <if test="searchTextType == 'hpNumber' ">
                    AND XCCI.HP_NUMBER LIKE CONCAT('%', #{searchText}, '%')
                </if>
        ) VARS
        </if>
        INNER JOIN CM_ADDR_CATE CAC
            ON CACG.ADDRESS_CATEGORY_GRP_ID = CAC.ADDRESS_CATEGORY_GRP_ID
        <if test="searchText != '' and searchText != null and searchTextType != '' and searchTextType != null ">
            AND FIND_IN_SET(CAC.ADDRESS_CATEGORY_ID, fnc_addr_hierarchi_id(@ids))
        </if>
        WHERE CACG.USE_YN = 'Y'
            AND CACG.CORP_ID = #{corpId}
            AND CACG.PROJECT_ID IN ('ALL', #{projectId})
        ORDER BY CAC.DIS_ORDER
    </select>

    <sql id ="whereSelectCmCuList">
        AND CACM.ADDRESS_CATEGORY_ID = #{addressCategoryId}
        <if test="searchText != '' and searchText != null ">
            <if test="searchTextType == 'cuid' ">
                AND CCI.CUID LIKE CONCAT('%', #{searchText}, '%')
            </if>
            <if test="searchTextType == 'cuName' ">
                AND CCI.CU_NAME LIKE CONCAT('%', #{searchText}, '%')
            </if>
            <if test="searchTextType == 'hpNumber' ">
                AND CCI.HP_NUMBER LIKE CONCAT('%', #{searchText}, '%')
            </if>
        </if>
    </sql>

    <select id="selectCmCuListCnt" parameterType="hashmap" resultType="int">
    /* sendMessage.selectCmCuListCnt 주소록 카테고리 구성원 목록 카운트 조회 */
        SELECT
            COUNT(*) AS CNT
        FROM CM_ADDR_CATE_MEM CACM
        INNER JOIN CM_CU_INFO CCI
            ON CACM.CU_INFO_ID = CCI.CU_INFO_ID
            AND CCI.USE_YN = 'Y'
        WHERE 1=1
        <include refid="whereSelectCmCuList"/>
    </select>

    <select id="selectCmCuList" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectCmCuList 주소록 카테고리 구성원 목록 조회 */
        SELECT
            CCI.CU_INFO_ID
            , CCI.CU_NAME
            , CCI.CUID
            , CCI.HP_NUMBER
            , CCI.EMAIL
        FROM CM_ADDR_CATE_MEM CACM
        INNER JOIN CM_CU_INFO CCI
            ON CACM.CU_INFO_ID = CCI.CU_INFO_ID
            AND CCI.USE_YN = 'Y'
        WHERE 1=1
        <include refid="whereSelectCmCuList"/>
        ORDER BY CU_INFO_ID
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
    </select>

    <select id="selectAllAddrCuList" parameterType="hashmap" resultType="kr.co.uplus.cm.sendMessage.dto.RecvInfo">
    /* sendMessage.selectAllAddrCuList 주소록 전체 구성원 목록 조회 */
        SELECT
            CCI.CUID
            , CCI.HP_NUMBER AS PHONE
            , @ROWNUM := @ROWNUM + 1 AS CLI_KEY
        FROM CM_ADDR_CATE_GRP CACG
        INNER JOIN CM_ADDR_CATE CAC
            ON CACG.ADDRESS_CATEGORY_GRP_ID = CAC.ADDRESS_CATEGORY_GRP_ID
        INNER JOIN CM_ADDR_CATE_MEM CACM
            ON CACM.ADDRESS_CATEGORY_ID = CAC.ADDRESS_CATEGORY_ID
        INNER JOIN CM_CU_INFO CCI
            ON CACM.CU_INFO_ID = CCI.CU_INFO_ID
            AND CCI.USE_YN = 'Y'
        INNER JOIN (SELECT @ROWNUM:=0) TMP
        WHERE CACG.USE_YN = 'Y'
            AND CACG.CORP_ID = #{corpId}
            AND CACG.PROJECT_ID IN ('ALL', #{projectId})
    </select>

    <select id="selectAllAppUserList" parameterType="hashmap" resultType="kr.co.uplus.cm.sendMessage.dto.RecvInfo">
    /* sendMessage.selectAllAppUserList 앱사용자 전체 조회 */
        SELECT
            TPUI.CUID
        <if test="requiredCuPhone">
            , TPUI.PHONENO AS PHONE
        </if>
            , @ROWNUM := @ROWNUM + 1 AS CLI_KEY
        FROM cm_push.T_PUSH_USER_INFO TPUI
        INNER JOIN (SELECT @ROWNUM:=0) TMP
        WHERE TPUI.APPID = #{appId}
    </select>

    <select id="selectPayType" parameterType="hashmap" resultType="string">
    /* sendMessage.selectPayType 결제방식 조회 */
        SELECT CP.PAY_TYPE
        FROM CM_CORP CC
        INNER JOIN CM_PROJECT CP
            ON CC.CORP_ID = CP.CORP_ID
            AND CP.USE_YN = 'Y'
            AND CP.DEL_YN = 'N'
            AND CP.PROJECT_ID = #{projectId}
        WHERE CC.STATUS = 'USE'
            AND CC.CORP_ID = #{corpId}
    </select>

    <!--
    [HISTORY]
     * 기존 CH_GRP(KAKAO), CH(FRENDTALK), SPEC(FRENDTALK_WIDE)
     * 형식으로 조회 하던 방식에서 SPEC 컬럼이 사라지면서 CH_GRP/CH/SPEC 컬럼은 중요하지 않다.
     * PRODUCT_CODE 로 고정 조회해야된다.
     * 왜 이런방식으로 변경되었는지는 몰르지만 발송가격조회 수정시 참고
     -->
    <select id="selectMsgFeePerOne" parameterType="hashmap" resultType="bigdecimal">
    /* sendMessage.selectMsgFeePerOne 메시지 발송 가격 */
        SELECT MAX(IFNULL(CCPU.PRE_FEE, CPU.PRE_FEE)) AS MAX_FEE
        FROM cm_bo.CM_PRODUCT_UNIT CPU
        LEFT OUTER JOIN CM_CORP_PRODUCT_UNIT CCPU
            ON CPU.PRODUCT_CODE = CCPU.PRODUCT_CODE
            AND CCPU.CORP_ID = #{corpId}
            AND CCPU.USE_YN = 'Y'
        WHERE CPU.USE_YN = 'Y'
            AND CPU.PRODUCT_CODE IN <foreach collection="productCodes" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
    </select>

    <insert id="insertCmWebMsg" parameterType="hashmap">
    /* sendMessage.insertCmWebMsg - 웹 발송 내역 등록 */
        INSERT INTO CM_WEB_MSG
        (
            WEB_REQ_ID
            , CORP_ID
            , PROJECT_ID
            , API_KEY
            , CH_STRING
            , MSG_INFO
            , SENDER_CNT
            , CALLBACK
            , CAMPAIGN_ID
            , SENDER_TYPE
            , STATUS
            , RESV_SENDER_YN
            , REG_DT
        <if test="reqDt != null and reqDt != '' ">
            ,REQ_DT
        </if>
        )
        VALUES
        (
            #{webReqId}
            , #{corpId}
            , #{projectId}
            , #{apiKey}
            , #{chString}
            , #{msgInfo}
            , #{senderCnt}
            , #{callback}
            , #{campaignId}
            , #{senderType}
            , #{status}
            , #{resvSenderYn}
            , NOW()
        <if test="reqDt != null and reqDt != '' ">
            , DATE_FORMAT(#{reqDt}, '%Y-%m-%d %H:%i')
        </if>
           )
    </insert>

    <select id="selectReSendCdList" parameterType="hashmap" resultType="string">
    /* sendMessage.selectReSendCdList 재발송 코드 리스트 조회 */
        SELECT CC.CODE_VAL_1
        FROM cm_bo.CM_CODE_TYPE CCT
        INNER JOIN cm_bo.CM_CODE CC
            ON CCT.CODE_TYPE_CD = CC.CODE_TYPE_CD
            AND CC.USE_YN = 'Y'
        WHERE CCT.USE_YN = 'Y'
            AND CC.CODE_TYPE_CD = 'RE_SEND_CD'
    </select>

    <insert id="insertCmMsg" parameterType="hashmap">
    /* sendMessage.insertCmMsg - 채널별 메시지 내역 등록 */
        INSERT
            INTO cm.CM_MSG
        (
            YMD
            , MSG_KEY
            , CORP_ID
            , PROJECT_ID
            , API_KEY
            , PAY_TYPE
            , CLI_KEY
            , SENDER_TYPE
            , REQ_CH
            , PRODUCT_CODE
            , STATUS
            , REG_DT
            , FINAL_CH
            , PHONE
            , PUSH_APP_ID
            , PUSH_CUID
            , CALLBACK
            , WEB_REQ_ID
            , GW_RESULT_CODE
            , GW_RESULT_DESC
            , FB_REQ_CNT
        ) VALUES (
            DATE_FORMAT(NOW(), '%Y-%m-%d')
            , #{msgKey}
            , #{corpId}
            , #{projectId}
            , #{apiKey}
            , 'POST'
            , #{cliKey}
            , #{senderType}
            , #{reqCh}
            , #{productCode}
            , '9999'
            , NOW()
            , #{finalCh}
            , #{phone}
            , #{pushAppId}
            , #{pushCuid}
            , #{callback}
            , #{webReqId}
            , #{gwResultCode}
            , #{gwResultDesc}
            , '0'
        )
    </insert>

    <select id="selectKkoSenderKeyList" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectKkoSenderKeyList - 카카오 발신 프로필키 일반 목록 조회 */
        SELECT
            CKC.SENDER_KEY
            , CKC.KKO_CH_ID
        FROM cm.CM_KKO_CH CKC
        INNER JOIN cm.CM_KKO_CAT CAT
            ON CKC.CATEGORY_CODE = CAT.CATEGORY_CODE
            AND CAT.USE_YN = 'Y'
        WHERE CKC.USE_YN = 'Y'
            AND CKC.CORP_ID = #{corpId}
            AND CKC.PROJECT_ID IN ('ALL', #{projectId})
            AND CKC.STAT = 'A'
            AND CKC.KKO_CH_STAT = 'A'
    </select>

    <select id="selectSmartTmpltInfo" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectSmartTmpltInfo - 통합/스마트발송 템플릿 정보 조회 */
        SELECT
            CST.TMPLT_CODE
            , CST.CORP_ID
            , CST.PROJECT_ID
            , CST.MSG_KIND
            , cm_console.fnc_get_cd_name('MSG_KIND', CST.MSG_KIND, 1) AS MSG_KIND_NAME
            , CST.MSG_TYPE
            , cm_console.fnc_get_cd_name('MSG_TYPE', CST.MSG_TYPE, 1) AS MSG_TYPE_NAME
            , CST.TMPLT_TITLE
            , CST.TMPLT_INFO
            , JSON_EXTRACT(CST.TMPLT_INFO, '$[*].ch') CH_TYPE_LIST
            , CST.TMPLT_TYPE
            , CST.TMPLT_STATUS
            , CST.PRODUCT_CODE
            , CST.REG_ID
            , CST.REG_DT
            , CST.USE_YN
            , CST.UPD_ID
            , CST.UPD_DT
        FROM cm.CM_SMART_TMPLT CST
        WHERE CST.TMPLT_CODE = #{tmpltCode}
            AND CST.CORP_ID = #{corpId}
            AND CST.PROJECT_ID IN ('ALL', #{projectId})
            AND CST.USE_YN = 'Y'
            AND CST.TMPLT_STATUS = 'COMPLETE'
            AND CST.TMPLT_TYPE = 'M'
    </select>

    <sql id ="whereSelectSmartTmpltList">
        AND A.CORP_ID = #{corpId}
        AND A.TMPLT_STATUS = 'COMPLETE'
        AND A.USE_YN = 'Y'
        AND A.TMPLT_TYPE = 'M'
        AND (A.PROJECT_ID = #{projectId} || A.PROJECT_ID = 'ALL')
        AND JSON_CONTAINS(JSON_ARRAY(<foreach collection="useChGrps" item="item" separator=",">#{item}</foreach>), JSON_EXTRACT(A.TMPLT_INFO, '$[*].ch'), '$') > 0
        <if test="searchText != '' and searchText != null ">
            <if test="searchCondi == 'templateChannel' ">
            AND UPPER(JSON_EXTRACT(A.TMPLT_INFO, '$[*].ch')) LIKE CONCAT('%', UPPER(#{searchText}), '%')
            </if>
            <if test="searchCondi == 'templateName' ">
            AND A.TMPLT_TITLE LIKE CONCAT('%', #{searchText}, '%')
            </if>
        </if>

        <if test="searchStartDate != '' and searchStartDate != null ">
            <if test="searchEndDate != '' and searchEndDate != null ">
            AND A.REG_DT BETWEEN CONCAT(#{searchStartDate}, ' 00:00:00') AND CONCAT(#{searchEndDate}, ' 23:59:59')
            </if>
        </if>
    </sql>

    <select id="selectSmartTmpltListCnt" parameterType="hashmap" resultType="int">
    /* integratedSend."selectSmartTmpltListCnt" - 스마트 템플릿 리스트 조회 */
        SELECT
            COUNT(PROJECT_ID) AS CNT
        FROM cm.CM_SMART_TMPLT A
        WHERE 1=1
        <include refid="whereSelectSmartTmpltList"/>
    </select>

    <select id="selectSmartTmpltList" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectSmartTmpltList - 스마트 템플릿 리스트 조회 */
        SELECT  @rownum:=@rownum+1 AS ROW_NUM
              , A.PROJECT_ID
              , CASE WHEN A.PROJECT_ID = 'ALL' THEN '프로젝트 공용'
                     ELSE '프로젝트 개별'
                END AS otherProjectUseYn
              , A.TMPLT_CODE
              , A.MSG_KIND
              , cm_console.fnc_get_cd_name('MSG_KIND', A.MSG_KIND, 1) AS MSG_KIND_NAME
              , A.MSG_TYPE
              , cm_console.fnc_get_cd_name('MSG_TYPE', A.MSG_TYPE, 1) AS MSG_TYPE_NAME
              , A.TMPLT_TITLE
              , A.TMPLT_INFO
              , A.TMPLT_TYPE
              , A.USE_YN
              <!-- , A.TMPLT_INFO ->> '$[0].chTypeList' AS TMPLT_CHANNEL -->
              , JSON_EXTRACT(A.TMPLT_INFO, '$[*].ch') CHECKED_CHANNEL
              , A.REG_ID
              , cm_console.fnc_get_user_name(A.REG_ID) AS REG_NM
              , DATE_FORMAT(A.REG_DT, '%Y.%m.%d %H:%i:%S') AS REG_DT
        FROM (SELECT @rownum:=0) TMP,
            cm.CM_SMART_TMPLT A
        WHERE 1=1
        <include refid="whereSelectSmartTmpltList"/>
        ORDER BY A.REG_DT DESC
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
    </select>

    <select id="selectSmartTmpltFrndPrdtInfo" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectSmartTmpltFrndPrdtInfo - 스마트 템플릿 친구톡 상품 정보 조회 */
        SELECT
            MSG_TYPE
            , @PATH_TO_NAME := JSON_UNQUOTE(JSON_SEARCH(TMPLT_INFO, "one", 'FRIENDTALK', NULL, '$[*].ch')) AS PATH_TO_NAME
            , @PATH_TO_PARENT := TRIM(TRAILING '.ch' FROM @PATH_TO_NAME) AS PATH_TO_PARENT
            , @COMMENTS_OBJECT := JSON_EXTRACT(TMPLT_INFO, @PATH_TO_PARENT) AS CH_OBJECT
            , JSON_UNQUOTE(JSON_EXTRACT(@COMMENTS_OBJECT, '$.data.wideImageYn')) AS WIDE_IMAGE_YN
        FROM cm.CM_SMART_TMPLT CST
        WHERE TMPLT_CODE = #{tmpltCode}
    </select>

    <select id="selectSmartTmpltRcsInfo" parameterType="hashmap" resultType="camel">
    /* sendMessage.selectSmartTmpltRcsInfo - 스마트 템플릿 RCS 정보 조회 */
        SELECT
            CST.TMPLT_INFO
            , @PATH_TO_NAME := JSON_UNQUOTE(JSON_SEARCH(CST.TMPLT_INFO, "one", 'RCS', NULL, '$[*].ch')) AS PATH_TO_NAME
            , @PATH_TO_PARENT := TRIM(TRAILING '.ch' FROM @PATH_TO_NAME) AS PATH_TO_PARENT
            , @COMMENTS_OBJECT := JSON_EXTRACT(TMPLT_INFO, @PATH_TO_PARENT) AS CH_OBJECT
            , JSON_UNQUOTE(JSON_EXTRACT(@COMMENTS_OBJECT, '$.data.rcsPrdType')) AS RCS_PRD_TYPE
            , JSON_UNQUOTE(JSON_EXTRACT(@COMMENTS_OBJECT, '$.data.mergeData')) AS MERGE_DATA
        FROM cm.CM_SMART_TMPLT CST
        WHERE CST.TMPLT_CODE = #{tmpltCode}
            AND JSON_CONTAINS(CST.TMPLT_INFO, JSON_OBJECT('ch', 'RCS'))
    </select>

</mapper>
