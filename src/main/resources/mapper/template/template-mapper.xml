<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="template">

    <sql id ="whereSelectPushTemplateList">
        AND CORP_ID = #{corpId}
        <if test="searchText != '' and searchText != null ">
            <if test="searchCondi == 'tmpltId' ">
            AND TMPLT_ID LIKE CONCAT('%', #{searchText}, '%')
            </if>
            <if test="searchCondi == 'tmpltName' ">
            AND TMPLT_NAME LIKE CONCAT('%', #{searchText}, '%')
            </if>
        </if>
        <if test="searchStartDate != '' and searchStartDate != null ">
            <if test="searchEndDate != '' and searchEndDate != null ">
            AND REG_DT BETWEEN CONCAT(#{searchStartDate}, ' 00:00:00') AND CONCAT(#{searchEndDate}, ' 23:59:59')
            </if>
        </if>
        <choose>
            <when test="searchOthPrjUseYn != null and searchOthPrjUseYn.size != 0 ">
                AND PROJECT_ID IN
                <foreach collection="searchOthPrjUseYn" item="item" index="index"  open="(" close=")" separator=",">
                    <if test='item == "Y" '>'ALL'</if>
                    <if test='item == "N" '>#{projectId}</if>
                </foreach>
            </when>
            <otherwise>
                AND PROJECT_ID IN ('ALL', #{projectId})
            </otherwise>
        </choose>
        <if test="tmpltId != '' and tmpltId != null ">
            AND TMPLT_ID = #{tmpltId}
        </if>
    </sql>

    <select id="selectPushTemplateListCnt" parameterType="hashmap" resultType="int">
    /* template.selectPushTemplate 푸시 템플릿 리스트 카운트 조회 */
        SELECT
            COUNT(*) AS CNT
        FROM CM_PUSH_TMPLT
        WHERE 1=1
        <include refid="whereSelectPushTemplateList"/>
    </select>

    <select id="selectPushTemplateList" parameterType="hashmap" resultType="camel">
    /* template.selectPushTemplate 푸시 템플릿 리스트 조회 */
        SELECT
            @ROWNUM := @ROWNUM + 1 AS ROWNUM
            , CIF.TMPLT_ID
            , CIF.TMPLT_NAME
            , CIF.MSG_TYPE
            , cm_console.fnc_get_cd_name('MSG_TYPE', CIF.MSG_TYPE, 1) AS MSG_TYPE_NAME
            , CIF.MSG_KIND
            , cm_console.fnc_get_cd_name('MSG_KIND', CIF.MSG_KIND, 1) AS MSG_KIND_NAME
            , CIF.PROJECT_ID
            , IF(CIF.PROJECT_ID = 'ALL', '공용', '전용') AS PROJECT_ID_NM
            , CIF.TMPLT_TITLE
            , CIF.TMPLT_CONTENT
            , CIF.RCVBLC_NUMBER
            , CIF.IMG_URL
            , CIF.FILE_ID
            , DATE_FORMAT(CIF.REG_DT, '%Y-%m-%d %H:%i:%S') AS REG_DT
            , CIF.REG_ID
            , cm_console.fnc_get_user_name(CIF.REG_ID)  AS REG_NM
            , CIF.UPD_DT
            , CIF.UPD_ID
            , CIF.ADTN_INFO
        FROM CM_PUSH_TMPLT CIF, (SELECT @ROWNUM:=0) TMP
        WHERE 1=1
        <include refid="whereSelectPushTemplateList"/>
        ORDER BY REG_DT DESC
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
    </select>

    <delete id="deletePushTemplate" parameterType="hashmap">
    /* template.deletePushTemplate - 푸시 템플릿 삭제 */
        DELETE
        FROM CM_PUSH_TMPLT
        WHERE CORP_ID = #{corpId}
            AND TMPLT_ID IN <foreach collection="tmpltIds" item="item" index="index"  open="(" close=")" separator=",">#{item}</foreach>
    </delete>

    <insert id="insertPushTemplate" parameterType="hashmap">
    /* template.insertPushTemplate - 푸시 템플릿 등록 */
        INSERT
            INTO CM_PUSH_TMPLT
        (
            TMPLT_ID
            , TMPLT_NAME
            , MSG_TYPE
            , MSG_KIND
            , TMPLT_TITLE
            , TMPLT_CONTENT
            , RCVBLC_NUMBER
        <if test="fileId != '' and fileId != null ">
            , IMG_URL
            , FILE_ID
        </if>
            , REG_DT
            , REG_ID
            , UPD_DT
            , UPD_ID
            , ADTN_INFO
            , PROJECT_ID
            , CORP_ID
        ) VALUES (
            #{tmpltId}
            , #{tmpltName}
            , #{msgType}
            , #{msgKind}
            , #{tmpltTitle}
            , #{tmpltContent}
            , #{rcvblcNumber}
        <if test="fileId != '' and fileId != null ">
            , #{imgUrl}
            , #{fileId}
        </if>
            , NOW()
            , #{userId}
            , NOW()
            , #{userId}
            , #{adtnInfo}
            , #{projectId}
            , #{corpId}
        )
    </insert>

    <update id="updatePushTemplate" parameterType="hashmap">
    /* template.insertPushTemplate - 푸시 템플릿 수정 */
        UPDATE CM_PUSH_TMPLT
        SET
            TMPLT_NAME = #{tmpltName}
            , MSG_TYPE = #{msgType}
            , MSG_KIND = #{msgKind}
            , PROJECT_ID = #{projectId}
            , TMPLT_TITLE = #{tmpltTitle}
            , TMPLT_CONTENT = #{tmpltContent}
            , RCVBLC_NUMBER = #{rcvblcNumber}
        <choose>
            <when test="fileId != '' and fileId != null ">
                , IMG_URL = #{imgUrl}
                , FILE_ID = #{fileId}
            </when>
            <otherwise>
                , IMG_URL = ''
                , FILE_ID = ''
            </otherwise>
        </choose>
            , UPD_DT = NOW()
            , UPD_ID = #{userId}
            , ADTN_INFO = #{adtnInfo}
        WHERE TMPLT_ID = #{tmpltId}
    </update>

    <insert id="insertSmsTemplate" parameterType="hashmap">
    /* template.insertPushTemplate - SMS 템플릿 등록 */
        INSERT
            INTO CM_SMS_TMPLT
        (
            TMPLT_ID
            , TMPLT_NAME
            , TMPLT_DESC
            , SENDER_TYPE
            , PROJECT_ID
            , MSG_KIND
            , TMPLT_TITLE
            , TMPLT_CONTENT
            , RCVBLC_NUMBER
            , IMG_INFO_LIST
            , REG_DT
            , REG_ID
            , UPD_DT
            , UPD_ID
            , CORP_ID
        ) VALUES (
            #{tmpltId}
            , #{tmpltName}
            , #{tmpltDesc}
            , #{senderType}
            , #{projectId}
            , #{msgKind}
            , #{tmpltTitle}
            , #{tmpltContent}
            , #{rcvblcNumber}
            , #{imgInfoListStr}
            , NOW()
            , #{userId}
            , NOW()
            , #{userId}
            , #{corpId}
        )
    </insert>

    <sql id ="whereSelectSmsTemplateList">
        AND CORP_ID = #{corpId}
        <if test="searchText != '' and searchText != null ">
            <if test="searchCondi == 'tmpltId' ">
            AND TMPLT_ID LIKE CONCAT('%', #{searchText}, '%')
            </if>
            <if test="searchCondi == 'tmpltName' ">
            AND TMPLT_NAME LIKE CONCAT('%', #{searchText}, '%')
            </if>
        </if>
        <if test="searchStartDate != '' and searchStartDate != null ">
            <if test="searchEndDate != '' and searchEndDate != null ">
            AND REG_DT BETWEEN CONCAT(#{searchStartDate}, ' 00:00:00') AND CONCAT(#{searchEndDate}, ' 23:59:59')
            </if>
        </if>
        <choose>
            <when test="searchOthPrjUseYn != null and searchOthPrjUseYn.size != 0 ">
                AND PROJECT_ID IN
                <foreach collection="searchOthPrjUseYn" item="item" index="index"  open="(" close=")" separator=",">
                    <if test='item == "Y" '>'ALL'</if>
                    <if test='item == "N" '>#{projectId}</if>
                </foreach>
            </when>
            <otherwise>
                AND PROJECT_ID IN ('ALL', #{projectId})
            </otherwise>
        </choose>
        <if test="tmpltId != '' and tmpltId != null ">
            AND TMPLT_ID = #{tmpltId}
        </if>
    </sql>

    <select id="selectSmsTmpltListCnt" parameterType="hashmap" resultType="int">
    /* template.selectSmsTmpltListCnt SMS 템플릿 리스트 카운트 조회 */
        SELECT
            COUNT(*) AS CNT
        FROM CM_SMS_TMPLT
        WHERE 1=1
        <include refid="whereSelectSmsTemplateList"/>
    </select>

    <select id="selectSmsTmpltList" parameterType="string" resultType="camel">
    /* template.selectSmsTmpltList SMS 템플릿 리스트 조회 */
        SELECT
            @ROWNUM := @ROWNUM + 1 AS ROWNUM
            , CST.TMPLT_ID
            , CST.TMPLT_NAME
            , CST.TMPLT_DESC
            , CST.SENDER_TYPE
            , CST.PROJECT_ID
            , IF(CST.PROJECT_ID = 'ALL', '공용', '전용') AS PROJECT_ID_NM
            , CST.MSG_KIND
            , cm_console.fnc_get_cd_name('MSG_KIND', CST.MSG_KIND, 1) AS MSG_KIND_NAME
            , CST.TMPLT_TITLE
            , CST.TMPLT_CONTENT
            , CST.RCVBLC_NUMBER
            , CST.IMG_INFO_LIST
            , DATE_FORMAT(CST.REG_DT, '%Y-%m-%d %H:%i:%S') AS REG_DT
            , CST.REG_ID
            , cm_console.fnc_get_user_name(CST.REG_ID)  AS REG_NM
            , CST.UPD_DT
            , CST.UPD_ID
        FROM CM_SMS_TMPLT CST, (SELECT @ROWNUM:=0) TMP
        WHERE 1=1
        <include refid="whereSelectSmsTemplateList"/>
        ORDER BY REG_DT DESC
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
    </select>

    <update id="updateSmsTmplt" parameterType="hashmap">
    /* template.updateSmsTmplt - SMS 템플릿 수정 */
        UPDATE CM_SMS_TMPLT
        SET
            TMPLT_NAME = #{tmpltName}
            , TMPLT_DESC = #{tmpltDesc}
            , SENDER_TYPE = #{senderType}
            , PROJECT_ID = #{projectId}
            , MSG_KIND = #{msgKind}
            , TMPLT_TITLE = #{tmpltTitle}
            , TMPLT_CONTENT = #{tmpltContent}
            , RCVBLC_NUMBER = #{rcvblcNumber}
            , IMG_INFO_LIST = #{imgInfoListStr}
            , UPD_DT = NOW()
            , UPD_ID = #{userId}
        WHERE TMPLT_ID = #{tmpltId}
    </update>

    <delete id="deleteSmsTmplt" parameterType="hashmap">
    /* template.deleteSmsTmplt - SMS 템플릿 삭제 */
        DELETE
        FROM CM_SMS_TMPLT
        WHERE CORP_ID = #{corpId}
            AND TMPLT_ID IN <foreach collection="tmpltIds" item="item" index="index"  open="(" close=")" separator=",">#{item}</foreach>
    </delete>

    <insert id="insertFrndTalkTemplate" parameterType="hashmap">
    /* template.insertFrndTalkTemplate - 친구톡 템플릿 등록 */
        INSERT
            INTO CM_FRIENDTALK_TMPLT
        (
            TMPLT_ID
            , TMPLT_NAME
            , CORP_ID
            , MSG_KIND
            , TMPLT_CONTENT
          <if test="fileId != '' and fileId != null ">
            , FILE_ID
            , IMG_URL
            , IMG_LINK
            , WIDE_IMG_YN
          </if>
            , TMPLT_BUTTONS
            , REG_DT
            , REG_ID
            , UPD_DT
            , UPD_ID
            , PROJECT_ID
        ) VALUES (
            #{tmpltId}
            , #{tmpltName}
            , #{corpId}
            , #{msgKind}
            , #{tmpltContent}
        <if test="fileId != '' and fileId != null ">
            , #{fileId}
            , #{imgUrl}
            , #{imgLink}
            , #{wideImgYn}
        </if>
            , #{tmpltButtonsStr}
            , NOW()
            , #{userId}
            , NOW()
            , #{userId}
            , #{projectId}
        )
    </insert>

    <update id="updateFrndTalkTmplt" parameterType="hashmap">
    /* template.updateFrndTalkTmplt - 친구톡 템플릿 수정 */
        UPDATE CM_FRIENDTALK_TMPLT
        SET
            TMPLT_NAME = #{tmpltName}
            , MSG_KIND = #{msgKind}
            , TMPLT_CONTENT = #{tmpltContent}
        <choose>
            <when test="fileId != '' and fileId != null ">
                , FILE_ID = #{fileId}
                , IMG_URL = #{imgUrl}
                , IMG_LINK = #{imgLink}
                , WIDE_IMG_YN = #{wideImgYn}
            </when>
            <otherwise>
                , FILE_ID = ''
                , IMG_URL = ''
                , IMG_LINK = ''
                , WIDE_IMG_YN = ''
            </otherwise>
        </choose>
            , TMPLT_BUTTONS = #{tmpltButtonsStr}
            , UPD_DT = NOW()
            , UPD_ID = #{userId}
            , PROJECT_ID = #{projectId}
        WHERE TMPLT_ID = #{tmpltId}
    </update>

    <sql id ="whereSelectFrndTalkTemplateList">
        AND CORP_ID = #{corpId}
        <if test="searchText != '' and searchText != null ">
            <if test="searchCondi == 'tmpltId' ">
            AND TMPLT_ID LIKE CONCAT('%', #{searchText}, '%')
            </if>
            <if test="searchCondi == 'tmpltName' ">
            AND TMPLT_NAME LIKE CONCAT('%', #{searchText}, '%')
            </if>
        </if>
        <if test="searchStartDate != '' and searchStartDate != null ">
            <if test="searchEndDate != '' and searchEndDate != null ">
            AND REG_DT BETWEEN CONCAT(#{searchStartDate}, ' 00:00:00') AND CONCAT(#{searchEndDate}, ' 23:59:59')
            </if>
        </if>
        <choose>
            <when test="searchOthPrjUseYn != null and searchOthPrjUseYn.size != 0 ">
                AND PROJECT_ID IN
                <foreach collection="searchOthPrjUseYn" item="item" index="index"  open="(" close=")" separator=",">
                    <if test='item == "Y" '>'ALL'</if>
                    <if test='item == "N" '>#{projectId}</if>
                </foreach>
            </when>
            <otherwise>
                AND PROJECT_ID IN ('ALL', #{projectId})
            </otherwise>
        </choose>
        <if test="tmpltId != '' and tmpltId != null ">
            AND TMPLT_ID = #{tmpltId}
        </if>
    </sql>

    <select id="selectFrndTalkTmpltListCnt" parameterType="hashmap" resultType="int">
    /* template.selectFrndTalkTmpltListCnt 친구톡 템플릿 리스트 카운트 조회 */
        SELECT
            COUNT(*) AS CNT
        FROM CM_FRIENDTALK_TMPLT
        WHERE 1=1
        <include refid="whereSelectFrndTalkTemplateList"/>
    </select>

    <select id="selectFrndTalkTmpltList" parameterType="string" resultType="camel">
    /* template.selectFrndTalkTmpltList 친구톡 템플릿 리스트 조회 */
        SELECT
            @ROWNUM := @ROWNUM + 1 AS ROWNUM
            , CFT.TMPLT_ID
            , CFT.TMPLT_NAME
            , CFT.CORP_ID
            , CFT.MSG_KIND
            , cm_console.fnc_get_cd_name('MSG_KIND', CFT.MSG_KIND, 1) AS MSG_KIND_NAME
            , CFT.TMPLT_CONTENT
            , CFT.FILE_ID
            , CFT.IMG_URL
            , CFT.IMG_LINK
            , CFT.WIDE_IMG_YN
            , CFT.TMPLT_BUTTONS
            , DATE_FORMAT(CFT.REG_DT, '%Y-%m-%d %H:%i:%S') AS REG_DT
            , CFT.REG_ID
            , cm_console.fnc_get_user_name(CFT.REG_ID)  AS REG_NM
            , CFT.UPD_DT
            , CFT.UPD_ID
            , CFT.PROJECT_ID
        FROM CM_FRIENDTALK_TMPLT CFT, (SELECT @ROWNUM:=0) TMP
        WHERE 1=1
        <include refid="whereSelectFrndTalkTemplateList"/>
        ORDER BY REG_DT DESC
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
    </select>

    <delete id="deleteFrndTalkTmplt" parameterType="hashmap">
    /* template.deleteFrndTalkTmplt - 친구톡 템플릿 삭제 */
        DELETE
        FROM CM_FRIENDTALK_TMPLT
        WHERE CORP_ID = #{corpId}
            AND TMPLT_ID IN <foreach collection="tmpltIds" item="item" index="index"  open="(" close=")" separator=",">#{item}</foreach>
    </delete>

    <select id="selectKkoTmpltCatGrpList" parameterType="hashmap" resultType="camel">
    /* template.selectKkoTmpltCatGrpList 카카오 템플릿 카테고리 그룹 목록 조회 */
        SELECT DISTINCT CATEGORY_GRP_NAME
        FROM cm.CM_KKO_TMPLT_CAT CKTC
        WHERE CKTC.USE_YN = 'Y'
    </select>

    <select id="selectKkoTmpltCatList" parameterType="hashmap" resultType="camel">
    /* template.selectKkoTmpltCatList 카카오 템플릿 카테고리 목록 조회 */
        SELECT
            CATEGORY_CODE
            , CATEGORY_NAME
            , USE_YN
            , REG_DT
            , CATEGORY_GRP_NAME
            , INCLUSION
            , EXCLUSION
        FROM cm.CM_KKO_TMPLT_CAT CKTC
        WHERE CKTC.USE_YN = 'Y'
        <if test="categoryGrpName != '' and categoryGrpName != null ">
            AND CATEGORY_GRP_NAME = #{categoryGrpName}
        </if>
        <if test="categoryCode != '' and categoryCode != null ">
            AND CATEGORY_CODE = #{categoryCode}
        </if>
    </select>

    <sql id ="innerWhereSelectAlimTalkTemplateList">
        AND CORP_ID = #{corpId}
        AND PROJECT_ID IN ('ALL', #{projectId})
        AND USE_YN = 'Y'
        AND TMPLT_STAT_CODE != 'D'
        <if test="tmpltKey != '' and tmpltKey != null ">
            AND TMPLT_KEY = #{tmpltKey}
        </if>
        <if test="tmpltCode != '' and tmpltCode != null ">
            AND TMPLT_CODE = #{tmpltCode}
        </if>
        <if test="senderKey != '' and senderKey != null ">
            AND SENDER_KEY = #{senderKey}
        </if>
        <if test="tmpltStatCode != '' and tmpltStatCode != null ">
            AND TMPLT_STAT_CODE = #{tmpltStatCode}
        </if>
        <if test="searchText != '' and searchText != null ">
            <if test="searchCondi == 'tmpltCode' ">
            AND TMPLT_CODE LIKE CONCAT('%', #{searchText}, '%')
            </if>
            <if test="searchCondi == 'tmpltName' ">
            AND TMPLT_NAME LIKE CONCAT('%', #{searchText}, '%')
            </if>
        </if>
       <if test="searchStartDate != '' and searchStartDate != null ">
            <if test="searchEndDate != '' and searchEndDate != null ">
            AND REG_DT BETWEEN CONCAT(#{searchStartDate}, ' 00:00:00') AND CONCAT(#{searchEndDate}, ' 23:59:59')
            </if>
        </if>
        <if test="searchTmpltStatCodes != null and searchTmpltStatCodes.size != 0 ">
            AND TMPLT_STAT_CODE IN
            <foreach collection="searchTmpltStatCodes" item="item" index="index" open="(" close=")" separator=",">
                <if test='item == "RQ" '>'R', 'Q'</if>
                <if test='item != "RQ" '>#{item}</if>
            </foreach>
        </if>
    </sql>

    <sql id ="whereSelectAlimTalkTemplateList">
    </sql>

    <select id="selectAlimTalkTmpltListCnt" parameterType="hashmap" resultType="int">
    /* template.selectAlimTalkTmpltListCnt - 알림톡 템플릿 리스트 카운트 조회 */
        SELECT
            COUNT(A.TMPLT_KEY) AS CNT
        FROM (
            SELECT CKTR.TMPLT_KEY
            FROM cm.CM_KKO_TMPLT_REQ CKTR
            WHERE 1=1
            <include refid="innerWhereSelectAlimTalkTemplateList"/>

            UNION ALL

            SELECT CKT.TMPLT_KEY
            FROM cm.CM_KKO_TMPLT CKT
            WHERE CKT.TMPLT_STAT_CODE = 'A'
            <include refid="innerWhereSelectAlimTalkTemplateList"/>
        ) A
    </select>

    <select id="selectAlimTalkTmpltList" parameterType="string" resultType="camel">
    /* template.selectAlimTalkTmpltList - 알림톡 템플릿 리스트 조회 */
        SELECT
            A.*
            , CASE
                WHEN A.SENDER_KEY_TYPE = 'S'
                THEN (SELECT X.KKO_CH_ID FROM cm.CM_KKO_CH X WHERE X.SENDER_KEY = A.SENDER_KEY AND X.CORP_ID = A.CORP_ID AND X.PROJECT_ID = A.PROJECT_ID)
                ELSE A.SENDER_KEY
            END AS KKO_CH_ID
            , (SELECT X.CATEGORY_GRP_NAME FROM cm.CM_KKO_TMPLT_CAT X WHERE X.CATEGORY_CODE = A.TMPLT_CATEGORY_CODE LIMIT 1) AS CATEGORY_GRP_NAME
            , cm_console.fnc_get_cd_name('SENDER_KEY_TYPE', A.SENDER_KEY_TYPE, 1) AS SENDER_KEY_TYPE_NAME
            , cm_console.fnc_get_cd_name('TMPLT_STAT_CODE', A.TMPLT_STAT_CODE, 1) AS TMPLT_STAT_CODE_NAME
            , @ROWNUM := @ROWNUM + 1 AS ROWNUM
        FROM (
            SELECT
                CKTR.TMPLT_KEY
                , CKTR.SENDER_KEY
                , CKTR.CORP_ID
                , CKTR.PROJECT_ID
                , CKTR.TMPLT_CODE
                , CKTR.TMPLT_CATEGORY_CODE
                , CKTR.TMPLT_NAME
                , CKTR.TMPLT_MSG_TYPE
                , CKTR.SENDER_KEY_TYPE
                , CKTR.USE_YN
                , CKTR.TMPLT_STAT_CODE
                , CKTR.REG_DT
                , CKTR.TMPLT_REQ_DT
                , CKTR.TMPLT_INFO
                , CKTR.REASON
                , DATE_FORMAT(CKTR.UPD_DT, '%Y.%m.%d') AS UPD_DT
                , CKTR.APPROVAL_DT
                , CASE
                    WHEN JSON_CONTAINS(JSON_EXTRACT(TMPLT_INFO, CONCAT('$.comments[*].status')), JSON_ARRAY('REJ'), '$') > 0 THEN 'Y'
                    ELSE 'N'
                END AS EXISTS_REJ_RESN_YN
            FROM cm.CM_KKO_TMPLT_REQ CKTR
            WHERE 1=1
            <include refid="innerWhereSelectAlimTalkTemplateList"/>

            UNION ALL

            SELECT
                CKT.TMPLT_KEY
                , CKT.SENDER_KEY
                , CKT.CORP_ID
                , CKT.PROJECT_ID
                , CKT.TMPLT_CODE
                , CKT.TMPLT_CATEGORY_CODE
                , CKT.TMPLT_NAME
                , CKT.TMPLT_MSG_TYPE
                , CKT.SENDER_KEY_TYPE
                , CKT.USE_YN
                , CKT.TMPLT_STAT_CODE
                , CKT.REG_DT
                , CKT.TMPLT_REQ_DT
                , CKT.TMPLT_INFO
                , '' AS REASON
                , DATE_FORMAT(CKT.UPD_DT, '%Y.%m.%d') AS UPD_DT
                , CKT.APPROVAL_DT
                , 'N' AS EXISTS_REJ_RESN_YN
            FROM cm.CM_KKO_TMPLT CKT
            WHERE CKT.TMPLT_STAT_CODE = 'A'
            <include refid="innerWhereSelectAlimTalkTemplateList"/>
        ) A, (SELECT @ROWNUM:=0) TMP
        WHERE 1=1
        <include refid="whereSelectAlimTalkTemplateList"/>
        ORDER BY REG_DT DESC
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
    </select>

    <select id="selectKkoTmpltRejResn" parameterType="hashmap" resultType="camel">
    /* template.selectKkoTmpltRejResn 카카오 템플릿 반려 사유 조회 */
        SELECT
            @PATH_TO_NAME := JSON_UNQUOTE(JSON_SEARCH(TMPLT_INFO, "one", 'REJ', NULL, '$.comments[*].status')) AS PATH_TO_NAME
            , @PATH_TO_PARENT := TRIM(TRAILING '.status' FROM @PATH_TO_NAME) AS PATH_TO_PARENT
            , @COMMENTS_OBJECT := JSON_EXTRACT(TMPLT_INFO, @PATH_TO_PARENT) AS CH_OBJECT
            , JSON_UNQUOTE(JSON_EXTRACT(@COMMENTS_OBJECT, '$.content')) AS REJECT_RESON
        FROM cm.CM_KKO_TMPLT_REQ
        WHERE TMPLT_KEY = #{tmpltKey}
    </select>

</mapper>