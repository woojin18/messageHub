<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="login">

	<select id="qrySelectUserName" parameterType="string" resultType="kr.co.uplus.cm.common.model.AuthUser">
	/* login.qrySelectUserName */
		SELECT
			USER.USER_ID,
			USER.LOGIN_ID,
			USER.USER_NAME,
			USER.LOGIN_PWD AS USER_PWD,
			USER.PWD_UPD_DT,
			USER.HP_NUMBER,
			USER.RECENT_CONN_DT,
			USER.SMS_CERTIFY_NUMBER,
			USER.LOGIN_FAIL_CNT,
			USER.APPROVAL_STATUS,
			ROLE.ROLE_CD,
			USER.DEL_YN,
			USER.REG_ID,
			USER.REG_DT,
			USER.UPD_DT,
			CASE
				WHEN USER.APPROVAL_STATUS = 'Y' AND IFNULL(USER.LOGIN_FAIL_CNT, 0) <![CDATA[<]]> 5 THEN 'USE'
				WHEN USER.APPROVAL_STATUS = 'ING' THEN 'NOTAUTH'
				WHEN IFNULL(USER.LOGIN_FAIL_CNT, 0) <![CDATA[>=]]> 5 THEN 'LOCK'
				ELSE 'NOTUSE'
			END	AS STATUS,
			ROLE.ROLE_CD	AS ROLE,
			USER.CORP_ID,
			ROLE.SVC_TYPE_CD,
			CASE
				WHEN USER.REP_PROJECT_ID IS NULL THEN PJT.PROJECT_ID
				WHEN USER.REP_PROJECT_ID = '' THEN PJT.PROJECT_ID
				ELSE USER.REP_PROJECT_ID
			END AS REP_PROJECT_ID,
			CSB.REQ_TYPE AS BIZ_TYPE,
			DATEDIFF(NOW(), USER.PWD_UPD_DT) AS DIFF_DATE
		FROM	cm_console.CM_USER USER
		LEFT OUTER JOIN	cm_bo.CM_ROLE ROLE
			ON	ROLE.ROLE_CD = USER.ROLE_CD
		LEFT OUTER JOIN (
			SELECT
				PROJECT_ID,
				CORP_ID,
				USER_ID
			FROM 	cm_console.CM_PROJECT_USER
			WHERE USER_ID = (SELECT USER_ID FROM cm_console.CM_USER WHERE LOGIN_ID = #{userId})
			ORDER BY REG_DT DESC LIMIT 1
		) PJT
			ON PJT.USER_ID = USER.USER_ID
		LEFT OUTER JOIN cm_console.CM_SPECIAL_BUSI CSB
			ON CSB.CORP_ID = PJT.CORP_ID AND CSB.APPROVAL_STATUS = 'APP'
		WHERE	USER.LOGIN_ID = #{userId}
		AND (ROLE.SVC_TYPE_CD = 'AC' OR ROLE.SVC_TYPE_CD = 'UC'
		OR (ROLE.SVC_TYPE_CD = 'BO' AND ROLE.ROLE_CD = 'GUEST'))
	</select>

	<select id="qryInsertAuthUser" parameterType="kr.co.uplus.cm.common.model.AuthUser" resultType="Integer">
		INSERT INTO CLOUD_TEST_USER
		(
			USER_ID, USER_PWD, STATUS, ROLE
		)
		VALUES
		(
    		#{userId}, #{userPwd}, #{status}, #{role}
   		)
	</select>

	<select id="getProjectForUser" parameterType="string" resultType="camel">
		/* login.getProjectForUser */
		SELECT
			CP.PROJECT_ID,
			CP.CORP_ID,
			CP.PROJECT_NAME
		FROM CM_PROJECT_USER CPU
			JOIN CM_PROJECT CP ON CPU.PROJECT_ID = CP.PROJECT_ID
		WHERE CPU.USER_ID = #{userId}
		AND USE_YN = 'Y'
		AND DEL_YN = 'N'
		ORDER BY CPU.REG_DT DESC
	</select>


	<select id="getProjectChUseListForUser" parameterType="string" resultType="camel">
		/* login.getProjectChUseListForUser */
		SELECT
			REPLACE(JSON_EXTRACT(A.USE_CH_GRP_INFO , '$.MO[0]'), "\"", "")  AS MO_YN
		,	REPLACE(JSON_EXTRACT(A.USE_CH_GRP_INFO , '$.KKO[0]'), "\"", "")  AS KKO_YN
		,	REPLACE(JSON_EXTRACT(A.USE_CH_GRP_INFO , '$.RCS[0]'), "\"", "")  AS RCS_YN
		,	REPLACE(JSON_EXTRACT(A.USE_CH_GRP_INFO , '$.PUSH[0]'), "\"", "")  AS PUSH_YN
		,	REPLACE(JSON_EXTRACT(REPLACE(A.USE_CH_GRP_INFO, '/', '') , '$.SMSMMS[0]'), "\"", "")  AS SMSMMS_YN
		FROM cm_console.CM_PROJECT A
		WHERE	A.PROJECT_ID = #{projectId}
	</select>

    <select id="getMenuForRole" resultType="kr.co.uplus.cm.common.dto.Menu">
    /* login.getMenuForRole */
    SELECT  e.ROLE_CD
      ,   a.MENUS_CD
      ,   CASE
            WHEN MENUS_LEVEL = 0 THEN '운영사'
            WHEN MENUS_LEVEL = 1 THEN '대메뉴'
            WHEN MENUS_LEVEL = 2 THEN '중메뉴'
            WHEN MENUS_LEVEL = 3 THEN '소메뉴'
          END AS GUBUN
      ,   MENUS_NAME
      ,   IMG_TAG
      ,   TOP_MENUS_CD
      ,   PAR_MENUS_CD
      ,   MENUS_LEVEL
      ,   DIS_ORDER
      ,   WEB_URL
      ,   a.SVC_TYPE_CD
      ,   c.ACTIVITY_CD
      FROM  cm_bo.CM_MENU               a
         ,  cm_bo.CM_MENU_ACTIVITY      b
         ,  cm_bo.CM_ACTIVITY           c
         ,  cm_bo.CM_ROLE_MENU_ACTIVITY d
         ,  cm_bo.CM_ROLE               e
      WHERE 1 = 1
      AND   a.SVC_TYPE_CD = #{svc_type_cd}
      AND   a.USE_YN      = 'Y'
      AND   a.MENUS_CD    = b.MENUS_CD
      AND   b.ACTIVITY_CD = c.ACTIVITY_CD
      AND   c.USE_YN      = 'Y'
      AND   b.MENUS_CD    = d.MENUS_CD
      AND   b.ACTIVITY_CD = d.ACTIVITY_CD
      AND   d.ROLE_CD     = e.ROLE_CD
      AND	e.SVC_TYPE_CD IN ('AC', 'UC')
      AND   e.USE_YN      = 'Y'
    ORDER BY e.ROLE_CD, a.MENUS_LEVEL, a.DIS_ORDER
    </select>
	
	<update id="updatePassword">
		/* login.updatePassword */
		UPDATE	cm_console.CM_USER
		SET		LOGIN_PWD = #{pwd}
		,		PWD_UPD_DT = NOW()
		,		APPROVAL_STATUS = 'Y'
		WHERE	LOGIN_ID = #{loginId}
	</update>

	<select id="findLoginId" resultType="camel">
		/* login.findLoginId */
		SELECT	LOGIN_ID
		FROM	cm_console.CM_USER
		WHERE	USER_NAME = #{findUserName}
		AND		HP_NUMBER = #{findHpNumber}
		AND		DEL_YN = 'N'
	</select>

	<update id="updateRecentConnDt">
		/* login.updateRecentConnDt */
		UPDATE	cm_console.CM_USER
		SET
			RECENT_CONN_DT = NOW(),
			LOGIN_FAIL_CNT = 0,
			APPROVAL_STATUS = 'Y'
		WHERE	LOGIN_ID = #{userId}
	</update>

	<update id="updateLoginFailCnt">
		/* login.updateLoginFailCnt */
		UPDATE cm_console.CM_USER
		SET
			LOGIN_FAIL_CNT = IFNULL(LOGIN_FAIL_CNT, 0)+1
		WHERE	LOGIN_ID = #{userId}
	</update>

</mapper>