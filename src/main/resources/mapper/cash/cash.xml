<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cash">
	<insert id="insertWebCashInfo">
		/* cash.insertWebCashInfo */
		INSERT	cm_console.CM_WEB_CASH_HIST (
				CORP_ID
		,		CASH_ID
		,		PAYMENT_ID
		,		PAY_MTD
		,		STATUS
		,		CASH_CHARG_AMOUNT
		,		REG_DT
		,		UPD_DT
		) VALUES (
				#{corpId}
		,		#{cashId}
		,		#{orderId}
		,		#{payMtd}
		,		#{status}
		,		#{amount}
		,		NOW()
		,		NOW()
		)
	</insert>
	
	<select id="selectWebCashInfo" resultType="camel">
		/* cash.selectWebCashInfo */
		SELECT	PAYMENT_ID							AS ORDER_ID
		,		CAST(CASH_CHARG_AMOUNT AS unsigned)	AS AMOUNT
		FROM	cm_console.CM_WEB_CASH_HIST
		WHERE	PAYMENT_ID = #{orderId}
	</select>
	
	<select id="selectCashId" resultType="String">
		/* cash.selectCashId */
		SELECT	IFNULL(cc.CASH_ID, '') AS CASH_ID
		FROM	cm.CM_CASH cc 
		WHERE	cc.CORP_ID = #{corpId}
		AND		cc.CASH_TYPE = 'C'
		AND		cc.USE_YN = 'Y'
	</select>
	
	<update id="updateWebCashInfo">
		/* cash.updateWebCashInfo */
		UPDATE	cm_console.CM_WEB_CASH_HIST
		SET		APPROVAL_NUMBER		= #{approvalNumber}
		,		CARD_COMPANY		= #{cardCompany}
		,		RECEIPT_URL			= #{receiptUrl}
		,		STATUS				= #{status}
		,		UPD_DT				= NOW()
		,		BANK				= #{bank}
		,		ACCOUNT_NUMBER		= #{accountNumber}
		,		CUSTOMER_NAME		= #{customerName}
		,		DUE_DATE			= #{dueDate}
		,		REFUND_STATUS		= #{refundStatus}
		,		SETTLEMENT_STATUS	= #{settlementStatus}
		,		SECRET				= #{secret}
		WHERE	PAYMENT_ID = #{orderId}
	</update>
	
	<select	id ="selectCashHist_count" resultType="int">
		/* cash.selectCashHist_count */
		SELECT	(SELECT COUNT(1)
                FROM    cm_console.CM_WEB_CASH_HIST A
                INNER JOIN cm_bo.CM_CODE B
					ON	B.CODE_TYPE_CD = 'PAY_TYPE'
					AND	A.PAY_MTD = B.CODE_VAL_1
                WHERE   STATUS != '0'
                AND     CORP_ID = #{corpId}) + 
                (SELECT  COUNT(1)
                FROM    cm.CM_CASH cc
                WHERE   cc.CORP_ID = #{corpId}
                AND     cc.CASH_TYPE = 'E')
	</select>
	
	<select	id ="selectCashHist" resultType="camel">
		/* cash.selectCashHist */
		SELECT	*
		,		@ROWNUM := @ROWNUM + 1 AS ROWNUM
		from (
			SELECT	CASH_CHARG_AMOUNT							AS AMOUNT
			,		'충전캐시'									AS CASH_TYPE
			,		B.CODE_NAME_1								AS PAY_MTD
			,		DATE_FORMAT(A.REG_DT, '%Y-%m-%d %H:%i:%s')	AS REG_DT
			,		'-'											AS EVENT_DT
			,		PAYMENT_ID
			,		A.STATUS
			,		CASE A.STATUS
						WHEN '0'
						THEN '승인요청'
						WHEN '1'
						THEN '승인'
						WHEN '2'
						THEN '입금대기'
						WHEN '9'
						THEN '입금취소'
					END AS STATUS_NAME
			FROM	cm_console.CM_WEB_CASH_HIST A
			INNER JOIN cm_bo.CM_CODE B
				ON	B.CODE_TYPE_CD = 'PAY_TYPE'
				AND	A.PAY_MTD = B.CODE_VAL_1
			WHERE	STATUS != '0'
			AND		CORP_ID = #{corpId}
			UNION ALL
			SELECT	(SELECT MAX(AMOUNT) FROM cm.CM_CASH_HIST X WHERE X.CASH_ID = cc.CASH_ID) AS AMOUNT
			,		'이벤트캐시'
			,		'이벤트캐시'
			,		DATE_FORMAT(cc.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT
			,		CONCAT(DATE_FORMAT(cc.START_DT, '%Y-%m-%d %H:%i'), '~', DATE_FORMAT(cc.EXP_DT, '%Y-%m-%d %H:%i')) AS EVENT_DT
			,		''
			,		''
			,		'-'
			FROM	cm.CM_CASH cc
			WHERE	cc.CORP_ID = #{corpId}
			AND		cc.CASH_TYPE = 'E'
			ORDER BY REG_DT DESC
		) A, (SELECT @ROWNUM:=0) TMP
        <if test='pagingYn == "Y" '>
        LIMIT #{offset}, #{listSize}
        </if>
	</select>
	
	<select id="selectViraccCashHist" resultType="camel">
		/* cash.selectViraccCashHist */
		SELECT	CORP_ID
		,		PAYMENT_ID
		,		CASH_ID
		,		CASH_CHARG_AMOUNT
		,		STATUS
		FROM	cm_console.CM_WEB_CASH_HIST
		WHERE	PAYMENT_ID = #{orderId}
		<if test="secret != '' and secret != null">
		AND		SECRET = #{secret}
		</if>
	</select>
	
	<select id="selectViraccCashHistDetail" resultType="camel">
		/* cash.selectViraccCashHistDetail */
		SELECT	CONCAT( B.CODE_NAME_1, ' ',A.ACCOUNT_NUMBER) AS ACCOUNT_NUMBER 
		,		A.CUSTOMER_NAME
		,		A.CASH_CHARG_AMOUNT
		,		DATE_FORMAT(A.DUE_DATE,GET_FORMAT(DATETIME,'ISO')) AS DUE_DATE
		FROM	cm_console.CM_WEB_CASH_HIST A
		INNER JOIN cm_bo.CM_CODE B
			ON	B.CODE_TYPE_CD = 'VIR_ACC_BANK'
			AND (B.CODE_VAL_1 = A.BANK OR B.CODE_VAL_2 = A.BANK)
		WHERE	PAYMENT_ID = #{orderId}
	</select>
	
	<select id="selectViraccCashHistCnt" resultType="int">
		/* cash.selectViraccCashHistCnt */
		SELECT	COUNT(*)
		FROM	cm_console.CM_WEB_CASH_HIST
		WHERE	PAYMENT_ID = #{orderId}
		AND		SECRET = #{secret}
	</select>
	
	<update id="updateVirAccCashHist">
		/* cash.updateVirAccCashHist */
		
		UPDATE	cm_console.CM_WEB_CASH_HIST
		SET		STATUS		= #{virAccStatus}
		,		UPD_DT		= NOW()
		WHERE	PAYMENT_ID = #{orderId}
		AND		SECRET = #{secret}
	</update>
	
	<select id="selectUcubeInfo" resultType="camel">
		/* cash.selectUcubeInfo */
		SELECT	cu.BILL_ID
		,		DATE_FORMAT(cu.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT
		FROM cm_console.CM_UCUBE cu
		LEFT OUTER JOIN cm_console.CM_PROJECT cp
			ON cu.BILL_ID = cp.BILL_ID 
			AND		cp.DEL_YN = 'N'
		LEFT OUTER JOIN cm_console.CM_PROJECT_SUBBILL_CODE cpsc
			ON cu.BILL_ID = cpsc.BILL_ID 
		WHERE	cp.BILL_ID is null
		AND		cpsc.BILL_ID is null
		AND		cu.CORP_ID = #{corpId}
	</select>
	
	
	<select id="selectUcubePopInfo" resultType="camel">
		/* cash.selectUcubePopInfo */
		SELECT	cu.BILL_ID
		,		DATE_FORMAT(cu.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT
		FROM cm_console.CM_UCUBE cu
		WHERE	cu.CORP_ID = #{corpId}
	</select>
	
	<select id="selectProjectInfoCnt" resultType="int">
		/* cash.selectProjectInfoCnt */
		SELECT	COUNT(cp.PROJECT_ID)
		FROM	cm_console.CM_PROJECT cp
		INNER JOIN cm_console.CM_UCUBE cu
			ON	cp.CORP_ID = cu.CORP_ID
			AND	cp.BILL_ID = cu.BILL_ID
		WHERE	cp.CORP_ID = #{corpId}
		AND		cp.PAY_TYPE = 'POST'
		AND		cp.DEL_YN = 'N'
	</select>
	
	<select id="selectProjectInfo" resultType="camel">
		/* cash.selectProjectInfo */
		SELECT	cp.PROJECT_NAME
		,		cp.PROJECT_ID
		,		cp.BILL_ID
		,		cp.SERVICE_ID
		,		DATE_FORMAT(cp.REG_DT, '%Y-%m-%d %H:%i:%s') AS REG_DT
		,		cp.USE_YN
		,		JSON_EXTRACT(cu.UCUBE_INFO, '$.b')	AS B
		,		JSON_EXTRACT(cu.UCUBE_INFO, '$.a')	AS A
		FROM	cm_console.CM_PROJECT cp
		INNER JOIN cm_console.CM_UCUBE cu
			ON	cp.CORP_ID = cu.CORP_ID
			AND	cp.BILL_ID = cu.BILL_ID
		WHERE	cp.CORP_ID = #{corpId}
		AND		cp.PAY_TYPE = 'POST'
		AND		cp.DEL_YN = 'N'
	</select>
	
	<select id="selectProjectSubBillCodeCnt" resultType="int">
		/* cash.selectProjectSubBillCodeCnt */
		SELECT	COUNT(cpsc.DEPT_CODE)
		FROM	cm_console.CM_PROJECT_SUBBILL_CODE cpsc
		INNER JOIN cm_console.CM_UCUBE cu
			ON	cpsc.CORP_ID = cu.CORP_ID
			AND	cpsc.BILL_ID = cu.BILL_ID
		WHERE	cpsc.CORP_ID = #{corpId}
	</select>
	
	<select id="selectProjectSubBillCode" resultType="camel">
		/* cash.selectProjectSubBillCode */
		SELECT	cpsc.DEPT_CODE
		,		cpsc.DEPT_NAME
		,		DATE_FORMAT(cpsc.UPD_DT, '%Y-%m-%d %H:%i:%s') AS UPD_DT
		,		cpsc.USE_YN
		,		cpsc.BILL_ID
		,		cpsc.SERVICE_ID
		FROM	cm_console.CM_PROJECT_SUBBILL_CODE cpsc
		INNER JOIN cm_console.CM_UCUBE cu
			ON	cpsc.CORP_ID = cu.CORP_ID
			AND	cpsc.BILL_ID = cu.BILL_ID
		WHERE	cpsc.CORP_ID = #{corpId}
	</select>
	
	<insert id="insertUcubeInfo">
		/* cash.insertUcubeInfo */
		INSERT	cm_console.CM_UCUBE(
			CORP_ID
		,	BILL_ID
		,	UCUBE_INFO
		,	REG_DT
		,	UPD_DT
		)
		VALUES (
			#{corpId}
		,	#{billId}
		,	#{ucubeInfo}
		,	NOW()
		,	NOW()
		);
	</insert>
	
	<update id="updateProjectBillId">
		/* cash.insertUcubeInfo */
		UPDATE	cm_console.CM_PROJECT
		SET		BILL_ID = #{billId}
		WHERE	PROJECT_ID = #{chgProjectId}
		AND		CORP_ID = #{corpId}
	</update>
	
	<insert id="insertProjectSubBillCode">
		/* cash.insertProjectSubBillCode */
		INSERT	cm_console.CM_PROJECT_SUBBILL_CODE (
				DEPT_CODE
		,		BILL_ID
		,		CORP_ID
		,		USE_YN
		,		DEPT_NAME
		,		REG_DT
		,		SERVICE_ID
		,		UPD_DT
		) VALUES (
				#{deptCode}
		,		#{billId}
		,		#{corpId}
		,		#{useYn}
		,		#{deptName}
		,		NOW()
		,		#{serviceId}
		,		NOW()
		)
	</insert>
	
	<update id="updateProjectSubBillCode">
		/* cash.updateProjectSubBillCode */
		UPDATE	cm_console.CM_PROJECT_SUBBILL_CODE
		SET		DEPT_NAME = #{deptName}
		,		USE_YN = #{useYn}
		,		UPD_DT = NOW()
		WHERE	DEPT_CODE = #{deptCode}
		AND		CORP_ID = #{corpId}
	</update>
	
	<delete id="deleteProjectSubBillCode">
		/* cash.deleteProjectSubBillCode */
		DELETE FROM	cm_console.CM_PROJECT_SUBBILL_CODE
		WHERE	DEPT_CODE = #{deptCode}
		AND		CORP_ID = #{corpId}
		AND		USE_YN = 'N'
	</delete>
	
	<select id="selectCashHistInfoForPaymentId" resultType="camel">
		/* cash.selectCashHistInfoForPaymentId */
		SELECT	CORP_ID
		,		CASH_ID
		FROM	cm_console.CM_WEB_CASH_HIST cwch 
		WHERE	cwch.PAYMENT_ID = #{orderId}
	</select>
	
	<select id="selectEventCashBalance" resultType="int">
		/* cash.selectEventCashBalance */
		SELECT	IFNULL(SUM(cc.CASH_BALANCE), 0) AS BALANCE
		FROM	cm.CM_CASH cc 
		WHERE	cc.CORP_ID = #{corpId}
		AND		cc.CASH_TYPE = 'E'
	</select>
	
	<select id="selectCashInfoForCorpIdCashType" resultType="camel">
		/* cash.selectCashInfoForCorpIdCashType */
		SELECT	CORP_ID
		,		CASH_ID
		FROM	cm.CM_CASH cc
		WHERE	cc.CORP_ID = #{corpId}
		AND		cc.CASH_TYPE = 'C'
	</select>

    <select id="selectCalListCnt" resultType="int">
        /* cash.selectCalListCnt */
        SELECT COUNT(1)
          FROM (
	        SELECT 1
	          FROM cm_console.CM_CAL_HIST  a
	             , cm_bo.CM_PRODUCT_UNIT   b
	         WHERE a.PRODUCT_CODE      = b.PRODUCT_CODE
	           AND YM      LIKE CONCAT(#{srcMonth},'%')
	           AND CORP_ID = #{corpId}
	         GROUP BY SUBSTR(YM, 1,7), BILL_TYPE, b.PRODUCT_NAME ) AS a
    </select>
    
    <select id="selectCalList" resultType="camel">
        /* cash.selectCalList */
		SELECT SUBSTR(YM, 1,7) AS YM
		     , (CASE BILL_TYPE WHEN 'P' THEN '프로젝트' WHEN 'D' THEN '부서빌링' END) AS BILL_TYPE
		     , (CASE BILL_TYPE WHEN 'P' THEN (SELECT PROJECT_NAME FROM cm_console.CM_PROJECT x WHERE x.CORP_ID = a.CORP_ID AND x.PROJECT_ID = a.PROJECT_ID LIMIT 1)
		                       WHEN 'D' THEN (SELECT DEPT_NAME FROM cm_console.CM_PROJECT_SUBBILL_CODE x WHERE x.CORP_ID = a.CORP_ID AND x.DEPT_CODE = a.PROJECT_ID LIMIT 1) END) AS PROJECT_NAME
		     , b.PRODUCT_NAME
		     , SUM(a.SUCC_CNT) AS CNT 
		     , SUM(a.SUCC_CNT) * b.PRE_FEE AS AMT
		  FROM cm_console.CM_CAL_HIST  a
		     , cm_bo.CM_PRODUCT_UNIT   b
		 WHERE a.PRODUCT_CODE      = b.PRODUCT_CODE
           AND YM      LIKE CONCAT(#{srcMonth},'%')
		   AND CORP_ID = #{corpId}
		 GROUP BY SUBSTR(YM, 1,7), BILL_TYPE, b.PRODUCT_NAME
        <if test='pagingYn == "Y" '>
         LIMIT #{offset}, #{listSize}
        </if>
    </select>
    
    <select id="selectDeptList" resultType="camel">
        /* cash.selectDeptList */
		SELECT DEPT_NAME
		     , DEPT_CODE
		     , a.PROJECT_ID
		     , USE_YN
		     , (CASE USE_YN WHEN 'Y' THEN '예' ELSE '아니오' END) AS USE_YN_NM
             , a.BILL_ID AS ORG_BILL_ID
		     , a.BILL_ID 
		     , b.BILL_NAME
		     , DATE_FORMAT(a.REG_DT, '%Y-%m-%d') AS REG_DT
		  FROM cm_console.CM_PROJECT_SUBBILL_CODE a
		     , cm_console.CM_BILL                 b
		 WHERE a.CORP_ID = #{corpId}
           AND a.CORP_ID = b.CORP_ID
		   AND a.BILL_ID = b.BILL_ID
		 ORDER BY a.REG_DT DESC 
    </select>
    
    <select id="selectBillList" resultType="camel">
        /* cash.selectBillList */
        SELECT BILL_ID
             , BILL_NAME
          FROM cm_console.CM_BILL a
         WHERE a.CORP_ID = #{corpId}
           AND BILL_TYPE = 'DEPART'
         ORDER BY BILL_NAME 
    </select>
    
    <select id="selectProjectList" resultType="camel">
        /* cash.selectProjectList */
        SELECT PROJECT_ID
             , PROJECT_NAME
          FROM cm_console.CM_PROJECT a
         WHERE a.CORP_ID = #{corpId}
           AND SUBBILL_YN = 'Y'
           AND USE_YN     = 'Y'
           AND DEL_YN     = 'N'
         ORDER BY PROJECT_NAME 
    </select>
    
    <insert id="insertDept">
        /* cash.insertDept */
        INSERT INTO cm_console.CM_PROJECT_SUBBILL_CODE (
               DEPT_CODE
             , BILL_ID
             , CORP_ID
             , USE_YN
             , DEPT_NAME
             , PROJECT_ID
             , REG_DT
             , SERVICE_ID
             , UPD_DT
        ) VALUES (
               #{deptCode}
             , #{billId}
             , #{corpId}
             , #{useYn}
             , #{deptName}
             , #{projectId}
             , now()
             , #{serviceId}
             , now()
        )
    </insert>
    
    <update id="updateDept">
        /* cash.updateDept */
        UPDATE cm_console.CM_PROJECT_SUBBILL_CODE
          SET  BILL_ID    = #{billId}
             , USE_YN     = #{useYn}
             , DEPT_NAME  = #{deptName}
             , PROJECT_ID = #{projectId}
             , UPD_DT     = now()
         WHERE DEPT_CODE  = #{deptCode}
           AND BILL_ID    = #{orgBillId}
           AND CORP_ID    = #{corpId}
	</update>
    
    <update id="deleteDept">
        /* cash.deleteDept */
        DELETE 
          FROM cm_console.CM_PROJECT_SUBBILL_CODE
         WHERE DEPT_CODE = #{deptCode}
           AND BILL_ID   = #{billId}
           AND CORP_ID   = #{corpId}
         LIMIT 1
    </update>
</mapper>